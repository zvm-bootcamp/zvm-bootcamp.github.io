[[{"l":"Welcome","p":["Hi!"]}],[{"l":"English version"}],[{"i":"control-program-cp","l":"Control Program (CP)"},{"l":"Introdução","p":["z/VM possui dois componentes principais:","O Programa de Controle (CP) controla a Máquina Real.","O Sistema de Monitor Conversacional (CMS) controla as Máquinas Virtuais.","O CP é às vezes chamado de hipervisor. Ele é a camada entre o hardware e as máquinas virtuais. Cada máquina virtual parece ter seu próprio CPU, armazenamento (memória) e dispositivos. Na realidade, esses itens podem ser:","Reais. Por exemplo, você pode dedicar uma interface de rede real a uma máquina virtual para seu uso exclusivo.","Compartilhados. Por exemplo, o CPU é compartilhado por meio de divisão de tempo e o armazenamento real é compartilhado como armazenamento virtual.","Simulados. Por exemplo, um switch virtual é um switch de rede LAN simulado. CP mapeia transparentemente dispositivos e recursos virtuais para seus equivalentes reais.","Emulados. Por exemplo, discos SCSI emulados FBA. As declarações EDEVICE nos permitem definir dispositivos emulados que representam dispositivos reais para CP. Isso significa dispositivos SCSI.","Os tópicos a seguir explicam como o CP gerencia os recursos do computador para máquinas virtuais."]},{"i":"central-processing-units-cpus","l":"Central processing units (CPUs)","p":["TODO: Review","Um servidor IBM z13 pode ter até 141 processadores.","Um servidor IBM zEnterprise EC12 pode ter até 101 processadores.","z13 pode ter até 80 LPARs, um aumento dos 65 em zEC12.","Uma Partição Lógica agora pode ter até 141 processadores definidos no z13 (101 para zEC12).","Uma LPAR z/VM pode ter até 64 processadores lógicos se o SMT estiver desativado ou 32 processadores lógicos definidos se o SMT estiver ativado.","Processadores virtuais (ou CPUs virtuais) em uma única máquina virtual (arquitetada): 64","No entanto, NVirtual > NLogical geralmente não é prático.","Se capaz de rodar no modo multiprocessador, seu sistema operacional de máquina virtual despacha trabalho em suas CPUs virtuais como se estivesse rodando em hardware real. O CP cuida do despacho de trabalho em suas CPUs virtuais para CPUs reais.","Diretriz: Nunca dê a uma máquina virtual mais CPUs virtuais do que existem CPUs reais.","Geralmente, as máquinas virtuais compartilham todos os CPUs, mas um CPU real pode ser dedicado a uma máquina virtual, o que significa que o CPU é reservado para uso exclusivo dessa máquina virtual. Isso obviamente tem um impacto no desempenho das outras máquinas virtuais no sistema."]},{"l":"Storage","p":["O termo Storage no mainframe é análogo à memória em um computador pessoal. Os comandos do CP se referem à memória como storage, portanto, não confunda o termo \" storage\" com armazenamento em disco ou fita.","Cada máquina virtual tem seu próprio storage virtual. O CP gerencia a residência das páginas da máquina virtual no storage real por meio da paginação. Páginas que não foram referenciadas podem ser movidas do storage real para um dispositivo de paginação. Quando uma máquina virtual requer uma página que não está mais no storage real, ocorre uma falta de página e o CP traz a página faltante de volta para o storage real.","O CP possui facilidades que permitem que partes do storage real sejam compartilhadas por muitas máquinas virtuais. Tais porções são chamadas de segmentos compartilhados. Esse compartilhamento economiza no storage real e requer menos paginação, melhorando assim o desempenho. Por exemplo, o núcleo CMS é compartilhado no storage real por todas as máquinas virtuais que carregaram o CMS pelo nome; ou seja, toda máquina virtual CMS mapeia um segmento de storage virtual de 1 MB para o mesmo 1 MB de storage real."]},{"l":"DASD and minidisks","p":["DASD, o termo de mainframe para drives de disco, significa \"direct access storage device\" e é análogo a um disco rígido em um computador pessoal. Um único DASD real é chamado de volume ou volume real. Cada volume tem uma etiqueta ou número de série de volume (volser) que identifica o volume para o z/VM.","É importante entender a maneira como o z/VM compartilha DASD. O CP pode logicamente particionar volumes DASD reais em minidiscos, que é análogo a dividir um disco rígido de computador pessoal em várias partições. Um minidisco tem sua própria etiqueta, que é distinta da etiqueta DASD real. Cada máquina virtual pode ter um ou mais minidiscos e esses minidiscos estão sob controle do sistema operacional da maquina virtual."]},{"l":"Minidisks Temporários","p":["Você pode criar um minidisco temporário a partir de um pool especial de discos reais. O disco dura enquanto a máquina virtual estiver conectada. Ao desconectar, o minidisco temporário é excluído e o espaço retorna para o pool de disco temporário disponível."]},{"l":"Discos virtuais em storage","p":["Discos virtuais em armazenamento são semelhantes a minidiscos temporários, exceto que os discos são mapeados para o storage em vez de cilindros de discos reais. O uso de discos virtuais em storage evita a necessidade de I/O de disco. O CP gerencia as páginas do disco virtual como parte de sua gestão de memória real."]},{"i":"virtual-readers-punches-e-printers","l":"Virtual readers, punches, e printers","p":["Estes dispositivos não estão associados a dispositivos reais, mas são implementados através do sistema de arquivos de spool.","Nos primeiros dias da computação, a entrada no computador vinha de cartões perfurados carregados em um leitor de cartões ( reader). Você usava uma perfuradora ( keypunch) para registrar seu programa em cartões perfurados, depois carregava os cartões em um leitor de cartões ( reader), que interpretava seus cartões e carregava seu programa no computador. A saída do programa era escrita em uma impressora ( printer). O z/VM preserva esse pedaço da história da computação através de dispositivos virtuais de leitura, perfuração e impressão, também chamados de dispositivos de registro unitário. Os dispositivos de registro unitário oferecem uma maneira prática de enviar arquivos de um dispositivo virtual para outro, para outras máquinas virtuais ou para dispositivos reais (como impressoras reais). Por exemplo, você pode pensar em um arquivo sendo enviado de uma máquina virtual para outra como o equivalente virtual de pegar uma pilha de cartões de um computador e carregá-la no leitor de cartões de outro computador.","Por trás da manipulação desses arquivos, está um sistema de arquivos CP chamado sistema de arquivos de spool. O CP gerencia arquivos de spool em um ou mais volumes DASD que atuam como áreas de armazenamento temporário. Um arquivo de spool é uma coleção de dados juntamente com instruções de controle de dispositivo para processamento em um dispositivo de registro unitário. O spooling é o processamento de arquivos criados por ou destinados a leitores virtuais, perfurações e impressoras. Através de comandos CP e CMS, você pode enviar arquivos de spool de um dispositivo virtual para outro, de sua máquina virtual para outra e para dispositivos reais.","Por convenção, cada máquina virtual tem um leitor virtual ( reader) no número de dispositivo virtual 00C, uma perfuradora virtual ( punch) no número de dispositivo virtual 00D e uma impressora virtual ( printer) no número de dispositivo virtual 00E. Seu leitor virtual é como a caixa de entrada de um sistema de e-mail, exceto que mais do que apenas e-mails podem ser colocados lá. Através de sua perfuradora virtual, você pode colocar uma cópia de um sistema operacional inteiro no spool do sistema, e então usar o comando CP IPL para carregar e executar esse sistema operacional em sua máquina virtual."]},{"l":"O virtual machine console","p":["CP READ","Descrição","Enquanto você trabalha em seu console, o canto inferior direito da tela exibe vários avisos de status. Os avisos informam o que está acontecendo no sistema no momento atual. Se você esquecer o que esses avisos significam, você pode retornar a esta seção para referência.","Este aviso indica que há mais informações do que podem caber na tela atual. Após uma pausa (que depende das configurações do terminal da sua máquina virtual), a próxima tela de informações é exibida. Para ver a próxima tela imediatamente, pressione a tecla Limpar (Clear). Para manter essa informação na tela, pressione a tecla Enter, o que muda MORE... para HOLDING.","Este aviso significa que a máquina virtual está processando algo. No caso do CMS, significa que o CMS está pronto para que você insira um comando.","Este aviso significa que o Programa de Controle (CP) está esperando você inserir um comando.","Este aviso significa que o sistema está esperando que você limpe a tela antes de mostrar mais informações. O aviso aparece quando a tela exibe MORE... e você pressiona a tecla Enter. O aviso também pode aparecer quando outro usuário lhe envia uma mensagem. Para cancelar a retenção, pressione a tecla Clear.","Este aviso significa que o sistema está processando algo e está muito ocupado para aceitar outro comando. Espere alguns segundos e insira seu comando novamente.","Este aviso significa que um sistema operacional de máquina virtual, como o CMS, está esperando você inserir um comando.","HOLDING","MORE...","NOT ACCEPTED","O console da máquina virtual ou console virtual é a interface principal da máquina virtual. Quando você se conecta a uma máquina virtual a partir de um terminal local ou uma estação de trabalho remota, o console virtual é associado à sessão do terminal. A partir do console, você pode inserir comandos CP, como carregar (IPL) um sistema operacional. O console virtual é o dispositivo que um sistema operacional vê como seu sistema ou console de hardware.","RUNNING","Status do Console","VM READ"]},{"l":"O Diretório do Usuário","p":["O diretório do usuário z/VM (ou registro do usuário) descreve a configuração e as características operacionais de cada máquina virtual que pode ser criada pelo CP. Um diretório do usuário z/VM existe em duas formas: uma forma de origem que consiste em um ou mais arquivos CMS, e uma forma de objeto, compilada a partir da origem, em um disco formatado pelo CP.","Cada máquina virtual tem uma entrada no diretório.","User Directory example"]},{"l":"Exercícios"},{"l":"Logon na MAINT","p":["Faça login na máquina virtual MAINT. A senha padrão mudou no z/VM 6.3. Em nosso ambiente, a senha padrão é WD5JU8QP(ou o nome da máquina em alguns casos). Sempre verifique o Guia de Instalação que acompanha seu pedido no IBM Shopz.","Alternativamente, limpe a tela de login e, no modo CP, digite ===> logon maint WD5JU8QP","Pressione a tecla ENTER uma vez para mostrar algumas mensagens do PROFILE EXEC para este userid.","Pressione a tecla ENTER novamente para continuar e alterar o status de \"VM READ\" para o status \"RUNNING\".","O \"PROFILE EXEC\" será executado para configurar seu ambiente. Agora você está no CMS. É semelhante ao TSO no z/OS ou a um shell no Linux. Você aprenderá mais sobre o CMS na próxima seção. Agora, vamos fazer alguns comandos CP para se familiarizar com o sistema."]},{"l":"Comandos CP","p":["Esta seção descreverá alguns comandos CP."]},{"l":"HELP","p":["Você usa os comandos CP para se comunicar com o programa de controle. Os comandos CP controlam os dispositivos conectados a uma máquina virtual e suas características.","1. Para ver uma lista dos comandos CP:","Posicione o cursor em \"CP\"","Pressione a tecla ENTER","O que você vê aqui é um subconjunto dos comandos CP disponíveis no z/VM.","2. Para exibir o texto de ajuda para o comando DISCONNECT:","Pressione F8, se necessário, para avançar a tela.","Posicione o cursor em \"DISConn\"","A parte inferior da tela lista as teclas PF para opções adicionais que estão disponíveis para o comando selecionado.","3. Quando terminar de navegar, saia da utilidade de ajuda.","Pressione a tecla F3 (Sair) repetidamente até retornar ao estado \"RUNNING\"","Você pode ter que fazer isso repetidamente, dependendo de quão aprofundado você foi na função AJUDA.","4. Outra maneira de ir diretamente para o menu de comandos CP é com o seguinte comando de ajuda:","5. Saia do menu de ajuda e retorne ao prompt \"READY\":","Pressione a tecla F3 repetidamente até retornar ao estado \"RUNNING\""]},{"l":"QUERY","p":["0190, 0191, 019D, 019E, 0400, 0401 e 0402","0191","0200","0201, 0205, 0206","0300, 0304","0301, 0302, 0303","1. Para exibir uma lista de comandos que sua máquina virtual (MAINT, neste caso) está autorizada a emitir:","2. Exiba uma lista de todos os processadores reais e indique a maneira como cada processador está sendo utilizado.","2222, 24CC, 2CF0","3. Exiba o tamanho do storage real.","4. Exiba o tamanho do storage acessível à sua máquina virtual (MAINT)","5. Exiba o status dos dispositivos de armazenamento direto real (DASDs).","6. Exibir todos os dispositivos Open System Adapter (OSA) disponíveis.","7. Exiba o número de cilindros ou páginas que estão alocados, em uso, e disponíveis para volumes DASD anexados ao sistema que são propriedade de'CP' (Control Program). Estes são tipicamente DASDs relacionados ao sistema.","A máquina virtual MAINT tem acesso a ______________ MB de storage virtual.","A saída indica que seu sistema z/VM tem ______________ de storage real.","A saída indica que seu z/VM possui ______________ processadores reais. O endereço do processador 00 é o ______________ processador e o endereço do processador 01 é o ______________ .","DASD compartilhado com alguns arquivos importantes usados durante este bootcamp.","DASD para uso z/VM.","Descrição","Description","Device IDs","Discos adicionais de MAINT 1º nível.","Discos CMS usados para suportar seu ID de equipe no primeiro nível z/VM (ZVMDEMO).","Em um exercício posterior, você aprenderá como formatar um volume DASD. Basicamente, um volume deve ser alocado e utilizado das seguintes maneiras:","Espaço permanente do usuário.","Esta lista é longa porque a máquina virtual MAINT possui o mais alto nível de classe de privilégio (A, B, C, D, E, F, G), o que a permite emitir todos os comandos. Normalmente, uma máquina virtual geral deve ter apenas classe geral (G) de privilégio, que só permite que ela emita comandos para controlar seus próprios recursos.","O espaço de paginação no mainframe é semelhante ao swapping no ambiente distribuído. Windows tem arquivos de swap. Linux tem dispositivos de swap ou arquivos de swap. z/VM tem espaço de paginação.","O espaço de spool é onde arquivos de impressão, leitura e perfuração são armazenados.","O output retorna todos os dispositivos OSA livres. Um dispositivo OSA livre é aquele que não está atualmente em uso por um usuário ou pelo sistema.","Outros volumes de propriedade de CP. Por enquanto, considere volumes de propriedade de CP como volumes de sistema, contendo coisas como espaço de página (swap para aqueles que preferem a terminologia distribuída), espaço de spool, espaço temporário de arquivo, etc...","PAGE","PERM","SPOOL","TDISK","Tdisk é uma abreviação de disco temporário. O z/VM oferece a capacidade de definir discos temporários de trabalho ou utilitários.","Tipo","Uma lista de dispositivos conhecidos por esta máquina virtual é exibida. Verifique a tabela abaixo para descrições de cada dispositivo e para que são usados.","Usado para construir máquinas virtuais Linux.","Vamos aprender um pouco sobre o ambiente da sua máquina virtual com o comando QUERY.","Volume de inicialização ou \"res\" pack, às vezes chamado de SYSRES, ou volume de residência do sistema. O volume que você acabou de \"IPL\" (IPL 0200 CLEAR)."]},{"l":"VARY","p":["Com um mainframe, você tem a capacidade de ligar dispositivos e torná-los disponíveis para uso, ou você pode desligá-los e removê-los do pool de recursos disponíveis. Isso é chamado de variar dispositivos online e variar dispositivos off-line.","Em um exercício anterior, você usou o comando 'Q DASD ALL' para exibir o status dos DASDs reais. Como os dispositivos 2222, 24CC e 2CF0 não são necessários para sua máquina virtual de segundo nível, vamos variá-los para offline.","Exiba o status desses dispositivos para verificar se eles estão offline."]},{"l":"ATTACH","p":["Em um exercício anterior, você usou o comando 'Q OSA FREE' para exibir todos os endereços disponíveis do Open Systems Adapter. Você pode 'anexar' um dispositivo livre a uma máquina virtual e disponibilizá-lo para uso. Uma forma de anexar um dispositivo real é usando o comando 'ATTACH'.","Você usará os dispositivos OSA 800-802 neste workshop mais tarde para fornecer rede para o convidado Linux que você irá construir. Vamos anexar esses dispositivos à máquina virtual MAINT agora.","Exiba o status desses dispositivos:","Observe que eles não estão mais livres (Q OSA FREE)! Eles aparecem como anexados ao MAINT. O comando para retornar esses dispositivos ao pool de recursos livres para que outras máquinas virtuais os utilizem é 'DETACH'."]},{"l":"INDICATE","p":["O CP também possui comandos para ajudar você a monitorar o que está acontecendo com o seu sistema; IND ou INDICATE, é um desses comandos. Vamos experimentar alguns:","Este simples comando informa muitas coisas. Você pode perceber de imediato que o seu sistema está \"dormindo\"!","A utilização média é 000","Sem atividades de I/O","Sem paginação (lembre-se de que no z/VM 6.3 a IBM mudou o algoritmo de paginação; talvez às vezes você veja alguma atividade de paginação em um sistema não estressado)","Etc.","Outro comando útil é o 'IND USER'. Você pode usar este comando para descobrir como uma máquina virtual específica está se comportando. Se os campos de contagem de I/O estiverem progredindo, você sabe que a máquina está trabalhando em algo. Esperançosamente, é algo produtivo. Você pode querer tentar alguns comandos IND USER quando o seu convidado Linux estiver rodando mais tarde. (Veja a saída abaixo)","Tente outrass variações..."]},{"l":"CPFMTXA","p":["Quando você adiciona um novo disco a um PC, você pode formatá-lo, particioná-lo e construir sistemas de arquivos. Quando você adiciona um disco a um sistema z/VM, deve formatá-lo e informar ao z/VM como gostaria que o disco fosse usado, por exemplo: Page, Spool, Perm, etc.","CPFMTXA é uma utilidade para formatar e alocar página, spool, disco temporário e espaço de diretório em volumes DASD. Esses volumes especiais estão listados na lista 'CP_OWNED_VOLUMES' do arquivo 'SYSTEM CONFIG'. O z/VM usa volumes nesta lista sempre que precisa alocar espaço de página, spool, temporário e diretório. Além disso, o CPFMTXA pode ser usado para formatar, rotular e alocar volumes DASD para espaço de minidisco de usuário. Esse tipo de alocação é chamado de espaço PERM.","Agora, vamos praticar o uso da utilidade CPFMTXA."]},{"l":"Formatando um dispositivo para PAGE","p":["1. Primeiro, exiba uma lista de DASDs disponíveis:","Agora você terminou com o dispositivo 300. Desanexe-o do MAINT. Digite:","CPFMTXA pergunta em seguida qual dispositivo você gostaria de formatar. Você vai formatar o dispositivo 0300, o dispositivo que você acabou de anexar ao MAINT. Digite:","CPFMTXA pergunta em seguida qual intervalo de cilindros você gostaria de formatar. Esta é uma ótima funcionalidade. Às vezes você não quer formatar todo o volume, apenas intervalos de cilindros selecionados em um volume. Neste caso, você deseja formatar todo o volume, então digite:","Defina a propriedade para o volume:","Digite:","Em seguida, é solicitado um novo rótulo de volume (M01P02 significa volume de paginação). Digite:","Formate o dispositivo 0300 com o utilitário CPFMTXA. Digite:","Neste exemplo, temos o minidisco 551 acessado com a letra E. Se você não tiver este minidisco acessado, digite o seguinte comando e pressione enter:","Note que, por padrão, o CPFMTXA aloca todos os cilindros como espaço PERM. O espaço PERM é onde os minidisks da máquina virtual são alocados, mas nós alteramos esse comportamento em resposta ao \"ENTER ALLOCATION DATA\".","O asterisco significa \"anexar o dispositivo a mim\", o ID do usuário que está emitindo o comando de anexar.","O comando QUERY deve informar que o(s) disco(s) está(ão) livre(s). Anexe o volume ao MAINT. Exemplo: Se o volume estiver no endereço real 300, digite este comando e pressione a tecla Enter:","O CPFMTXA agora invoca o ICKDSF para começar a formatar o volume. Este seria um bom momento para pegar uma xícara de café! Quando a formatação estiver concluída, o CPFMTXA apresenta o seguinte:","O CPFMTXA está reportando o mapa de alocação atual do novo volume M01P02. Como você pode notar, ele está esperando uma entrada sua (instrução VM READ na parte inferior). Em resposta ao prompt \"ENTER ALLOCATION DATA\", digite os seguintes comandos:","O dispositivo 300 deve aparecer como anexado ao MAINT.","O utilitário CPFMTXA perguntará se você deseja formatar, alocar ou etiquetar. CPFMTXA é uma utilidade multifuncional. Neste caso, você deseja começar formatando. Digite:","Ou","Para o nosso exemplo, digite o seguinte e pressione enter:","Para obter acesso à utilidade CPFMTXA, verifique se você tem acesso ao minidisco 551. Na linha de comando, digite o seguinte comando e pressione a tecla Enter:","Para PAGE, SPOOL ou TDISK, precisamos definir um proprietário para o volume, especificando ssiname.sysname.","Regras para propriedade de volumes: Para volumes de usuário que são compartilhados(volumes PERM) em todo o cluster SSI, especifique NOSYS para o sysname (OWNER ssiname.NOSYS). Para volumes de usuário que não são compartilhados(volumes PAGE, SPOOL, TDISK) em todo o cluster SSI, especifique o sysname (OWNER ssiname.sysname).","Somos avisados de que o CPFMTXA está prestes a apagar todos os dados no volume; tem certeza de que deseja continuar?"]},{"i":"sec:formatdisks","l":"Exercício","p":["Utilizando o que você aprendeu no laboratório anterior:","Formate o dispositivo 304 como SPOOL. Por favor, note que para CPFMTXA o nome do tipo é SPOL (apenas 1 \"O\"), não SPOOL. Nomeie-o como M01S02. Não esqueça de configurar a propriedade.","Formate os dispositivos 301, 302 e 303, rotule-os como, por exemplo, LNX301, LNX302 e LNX303 e aloque o dispositivo inteiro com espaço PERM.","Hints Attach the device to MAINT","Format it","Detach the device","Na próxima seção, você aprenderá como adicionar isso ao sistema e tornar a alteração permanente."]},{"l":"Adicionando PAGE ao SYSTEM","p":["Antes de começar você precisa estar logado como MAINT.","Verifique os volumes de paginação no seu Sistema z/VM. Digite o seguinte comando e pressione a tecla Enter:","Defina a propriedade para o volume (se você ainda não o fez). Digite os seguintes comandos e pressione enter:","Digite o seguinte comando para obter o próximo número de slot disponível. Pressione Pausar/Interromper para limpar a tela até ver o slot 255 (o slot de página padrão na instalação). Em nosso sistema, você verá o slot 254 disponível.","Digite o seguinte comando para definir dinamicamente o novo volume de página no slot 254.","Digite o seguinte comando e pressione enter. Agora você anexou um novo volume de página ao seu sistema z/VM.","Digite os seguintes comandos para garantir que o novo volume de página está funcionando em seu sistema z/VM. O novo volume de página deve agora aparecer.","Vamos aprender como adicionar esse volume de página ao arquivo SYSTEM CONFIG na Unidade, ou teremos resultados desagradáveis no próximo IPL do z/VM. (Capítulo 4- explicaremos melhor o SYSTEM CONFIG)."]}],[{"l":"Workshop Environment"},{"l":"Hardware","p":["The hardware configuration depends on where this workshop is running. The instructor will cover it using the presentation."]},{"l":"Your Virtual Machine","p":["Second level z/VM at the beginning of the workshop","The figure 1.1 represents the resources of your 2nd level z/VM. At the end of this workshop these resources will be assigned composing your z/VM environment. Spoiler Alert on figure 1.2.","Second level z/VM at the end of the workshop"]},{"i":"access-your-zvm","l":"Access your z/VM","p":["\"Tab\" to advance the cursor to the \"IPL PARAMETERS\" section Enter\"cons=0009\".","===> press the Pause key to clear the screen again","===> Press the Pause key to clear the screen. You should see the screen below. Observe that we still have a status of More...","After you configure the IP address you should see the logon screen.","Attention It is important to disconnect, not log off your system. Logging off from the system is equivalent to turning off the computer, thus crashing your z/VM system.","Check the example below and press the F10 key to load the z/VM system.","Click on \"Link Parameters...\"","Connect to the first level z/VM system, known as ZVMDEMO.","Enter \"cold drain noautolog\"","Enter \"go\"","Enter the rest of the IPL parameters as follows.","Fill the primary IP and check \"Auto-reconnect\"","If necessary, press PAUSE BREAK (The status \"MORE...\" on the lower right on the console).","If your screen shows \"HOLDING\" in the lower right corner press the Pause key to clear the screen. You should next see the Stand Alone Program Loader screen.","It is time to start you z/VM environment. We will execute the IPL(Initial Program Load) of your system. In a first level environment it is done via HMC (Hardware Management Console), but we are in a restricted environment (2nd level) and our IPL is made via the first level z/VM.","Now disconnect from the 'OPERATOR'.","Now, type the following command to discover who use you are.","Obtain a team number from the instructor:","Press enter to accept the default \"no\"","Press the \"Pause\" key whenever the lower right hand corner of your console shows \"MORE\" or \"HOLDING\".","Press the Enter key to proceed","Press the Pause key when the console status indicates \"MORE...\"","Start the TN3270 client:","The OPERATOR user is currently logged on (How? Command <QUERY USERID>)","The system has MB of storage (memory) (message ID HCPIOP952I or<QUERY STORAGE>)","The system identifier is zVM . It is also displayed at the lower right hand corner of the console.","The z/VM Version 6 Release 3.0, service level (64-bit)","These messages provide some basic information about your system:","Type the following command to discover how was the last IPL performed.","Type your userid and the password (consult your instructor) and press enter to log in on the system (the password will be shown in blanks).","When prompted to \"Change TOD clock\":","When prompted to continue with \"COLD start\":","When prompted to provide \"start\" parameters:","You have successfully IPL'ed z/VM when you receive the following messages:","You should next see the Stand Alone Program Loader screen.","You should see the logon window for your second level z/VM system. This is the only session available to log on users. Later on, you will enable TCP/IP which will allow multiple connections to your system."]},{"i":"the-control-program-cp","l":"The Control Program (CP)"},{"l":"Introduction","p":["z/VM has two main components:","The Control Program (CP) controls the Real Machine.","The Conversational Monitor System (CMS) controls Virtual Machines.","The CP is sometimes called the hypervisor. It is the layer between the hardware and virtual machines. Each virtual machine appears to have its own CPU, storage (memory), and devices. In reality, these items can be:","Real. For example, you can dedicate a real network interface to a virtual machine for its exclusive use.","Shared. For example, the CPU is shared through time sharing and real storage is shared as virtual storage.","Simulated. For example, a virtual switch is a simulated LAN networking switch. CP transparently maps virtual devices and resources to their real counterparts.","Emulated. For example, FBA emulated SCSI disks. The EDEVICE statements allow us to define emulated devices that represent real devices to CP. This means SCSI devices.","The following topics explain how CP manages computer resources for virtual machines."]},{"i":"central-processing-units-cpus","l":"Central processing units (CPUs)","p":["& An IBM z13 server can have up to 141 processors. & An IBM zEnterprise EC12 server can have up to 101 processors. & z13 can have up to 80 LPARs, an increase from 65 in zEC12 & A Logical Partition can now have up to 141processors defined in z13 (101 for zEC12) & A z/VM LPAR can have up to 64 logical processors if SMT is disabled or 32 logical processors defined if SMT is enabled. & Virtual processors (or virtual CPUs) in single virtual machine (architected): 64 && But NVirtual > NLogical is not usually practical & If capable of running in multiprocessor mode, your virtual machine operating system dispatches work on its virtual CPUs as if it were running on real hardware. CP handles the dispatching of work on your virtual CPUs to real CPUs. & Guideline: Never give a virtual machine more virtual CPUs than there are real CPUs.","Usually virtual machines share all CPUs, but a real CPU can be dedicated to a virtual machine, which means that the CPU is reserved for that virtual machine's exclusive use. This obviously has an impact on the performance of other virtual machines in the system."]},{"l":"Storage","p":["Mainframe storage is analogous to memory in a personal computer. CP commands refer to memory as storage, so do not confuse the term\"storage\" with disk or tape storage.","Each virtual machine has its own virtual storage. CP manages the residency of virtual machine's pages in real storage through paging. Pages that have not been referenced can be moved out of real storage into a paging device. When a virtual machine requires a page no longer in real storage, a page fault occurs and CP brings the missing page back into real storage.","CP has facilities that allow portions of real storage to be shared by many virtual machines. Such portions are called shared segments. This sharing economizes on real storage and requires less paging, thereby improving performance. For example, the CMS nucleus is shared in real storage by all virtual machines that loaded CMS by name; that is, every CMS virtual machine maps a 1 MB segment of virtual storage to the same 1 MB of real storage."]},{"l":"DASD and minidisks","p":["DASD, the mainframe term for disk drives, stands for \"direct access storage device\" and is analogous to a hard disk drive on a personal computer. A single real DASD is called a volume or real volume. Each volume has a label or volume serial number (volser) that identifies the volume to z/VM.","It is important to understand the way that z/VM shares DASD. CP can logically partition real DASD volumes into minidisks, which is analogous to dividing a personal computer hard disk into multiple partitions. A minidisk has its own label, which is distinct from the real DASD label. Each virtual machine can have one or more minidisks and those minidisks are under control of the guest operating system."]},{"l":"Temporary minidisks","p":["You can create a temporary minidisk from a special pool of real disks. The disk lasts as long as the virtual machine is logged on. At logoff, the temporary minidisk is deleted and the space returned to the available temporary disk pool."]},{"l":"Virtual Disks in storage","p":["Virtual disks in storage are similar to temporary minidisks, except the disks are mapped to storage rather than the cylinders of real disks. Using virtual disks in storage avoids the need for disk I/O. CP manages the virtual disk pages as part of its real memory management."]},{"i":"virtual-readers-punches-and-printers","l":"Virtual readers, punches, and printers","p":["These devices are not associated with real devices, but are implemented through the spool file system.","In the early days of computing, input to the computer came from punched cards loaded into a card reader. You used a key punch to record your program on punched cards, then loaded the cards into a card reader, which interpreted your cards and loaded your program into the computer. Output from the program was written to a printer. z/VM preserves this bit of computing history through virtual reader, punch, and printer devices, also called unit record devices. Unit record devices provide a handy way to send files from one virtual device to another, to other virtual machines, or to real devices (such as real printers). For instance, you can think of a file being sent from one virtual machine to another as the virtual equivalent of taking a card stack from one computer and loading the stack onto another computer's card reader.","Behind the manipulation of these files is a CP file system called the spool file system. CP manages spool files on one or more DASD volumes that act as temporary storage areas. A spool file is a collection of data along with device control instructions for processing on a unit record device. Spooling is the processing of files created by or intended for virtual readers, punches, and printers. Through CP and CMS commands, you can send spool files from one virtual device to another, from your virtual machine to another, and to real devices.","By convention, each virtual machine has a virtual reader at virtual device number 00C, a virtual punch at virtual device number 00D, and a virtual printer at virtual device number 00E. Your virtual reader is like the in-box of an e-mail system, except more than just e-mail can be placed there. Through your virtual punch, you can place a copy of an entire operating system into the system spool, then use the CP IPL command to load and run that operating system in your virtual machine."]},{"l":"The virtual machine console","p":["The virtual machine console or virtual console is the primary interface to the virtual machine. When you log on to a virtual machine from a local terminal or a remote workstation, the virtual console is associated with the terminal session. From the console, you can enter CP commands, such as loading (IPL) an operating system. The virtual console is the device an operating system views as its system or hardware console.","As you do work on your console, the lower right corner of the screen displays various status notices. The notices tell you what is happening in the system at the present time. If you forget what these notices mean, you can come back to this section for reference.","CP READ This notice means that the Control Program (CP) is waiting for you to enter a command.","Console Status"]},{"l":"The User Directory","p":["The z/VM user directory (or user registry) describes the configuration and operating characteristics of each virtual machine that can be created by CP. A z/VM user directory exists in two forms: a source form that consists of one or more CMS files, and an object form, compiled from the source, on a CP-formatted disk.","Each virtual machine has a directory entry.","User Directory example"]},{"l":"Exercises"},{"l":"Logon to MAINT","p":["Log on to the MAINT virtual machine. The default password have changed in the z/VM 6.3. In our environment the default password is WD5JU8QP(or the name of the machine in some cases). Always check the Installation Guide that comes with yours IBM Shopz order.","Alternatively, clear the logon screen, from CP mode, enter ===> logon maint WD5JU8QP","Press the ENTER key once to show some messages of the PROFILE EXEC for this userid.","Press the ENTER key again to continue and to change the status from \"VM READ\" to \"RUNNING\" status.","The \"PROFILE EXEC\" will run to set up your environment. You are now in CMS. It is similar to TSO in z/OS or a shell in Linux. You will learn more about CMS in the next unit. Now, let's do some CP commands to get familiarized with the system."]}],[{"l":"CMS"},{"l":"Introduction","p":["Just as you can interact with Linux or UNIX® through a bash or Korn shell (popular Unix shell), you can interact with z/VM through CMS. Like a shell, you can use CMS to edit files, run EXECs (script-like executable files) or programs, modify the virtual machine environment, or modify z/VM itself. CMS is to z/VM as a shell is to Linux or UNIX."]},{"l":"HELP","p":["z/VM provides online help through the CMS Help system. The HELP command is like the man command in Linux. You can find full descriptions of z/VM commands by using the HELP command."]},{"l":"Minidisks and CMS access mode","p":["CMS, like other operating systems running in a virtual machine, can access minidisks to store and retrieve files. For CMS, each minidisk has an access mode represented by an alphabetic letter that determines how CMS searches for files. In Linux, path variables defining directories determine the search order for files. CMS searches for files among minidisks based on the alphabetical order of the access mode. First, CMS looks on the A minidisk, then the B minidisk, and so forth. The 191 minidisk holds a special place in CMS. A 191 minidisk to a CMS user is like the home file directory for a Linux user. CMS always tries to access a user's 191 minidisk as access mode A. The CMS 191 minidisk is often called the \"A-disk\"."]},{"l":"CMS Files","p":["CMS files have a file name, file type, and file mode. File names and file types can be up to 8 characters long. The file mode corresponds to the access mode of the minidisk. Examples:","By convention, some file types have special meanings. For example, EXEC is the file type for a file that contains executable statements, LISTING is the file type for text files, and LISTPS is the file type for PostScript files. To view and manipulate files, use the FILELIST command(Or LISTFILE command). FILELIST is similar to the dir command in Linux."]},{"l":"PROFILE EXEC","p":["The PROFILE EXEC is a special executable file analogous to the .profile(or .bash_profile) in Linux and UNIX. Every time a CMS user logs on, CMS runs the PROFILE EXEC residing on the 191 minidisk, file mode A. You can use the PROFILE EXEC to set up your virtual machine environment; for instance, access disks, set up special PF keys, or even load another operating system in your virtual machine.","There can be times when you do not want the PROFILE EXEC to execute when you log on. For example, assume your PROFILE EXEC automatically loads Linux. If you have just shut down Linux and want to start CMS, but prevent Linux from being loaded again, you can prevent CMS from executing the PROFILE EXEC by issuing access (noprof. When you IPL(load) CMS, you see an identifier line displayed and CMS pauses with VM READ in the lower right corner of the display.","Example (logging with NOPROF parameter)"]},{"l":"The CMS file editor XEDIT","p":["CMS provides a file editor called XEDIT, which is a not only a full-screen editor, but a powerful programming tool. XEDIT has functions similar to vi in Linux."]},{"l":"Exercises"},{"i":"help-1","l":"HELP","p":["Logon as MAINT. Press the enter key until you see the RUNNING state on the lower right hand corner of the screen.","To see a list of the CMS commands:","Place cursor on \"CMS\" and press the ENTER key","What you see here is a subset of the CMS commands available in z/VM.","Display helps text for the QUERY command. You may have to scroll down(F8) to find it.","Place cursor on \"Query\" and press the ENTER key","The bottom of the screen lists the PF Keys for additional options that are available for the selected command. To see related information for this command:","Press the F11 key","When you are done browsing, exit the help utility.","Press the F3 key repeatedly until you return to \"RUNNING\" state","Another way to go directly to the menu of CMS commands is with the following help command:","Exit the help facility and return to the READY prompt: Press the F3 key repeatedly until you return to \"RUNNING\" state"]},{"l":"QUERY","p":["The CMS QUERY command is used to display information about your virtual machine. You can get information about:","& The operation of your virtual machine. & The status of your files and file pool directories. & Information about how your virtual machine is set up.","Use the QUERY ACCESSED command to display the status of your accessed disks. Note that the 191 disk is accessed as \"A\".","Use the QUERY IMPCP command to find out the implied CP function setting for your virtual machine.","For the MAINT virtual machine, the IMPCP function is set to","You will learn more about this function in a moment."]},{"l":"ACCESS","p":["The ACCESS command is used to:","& Identify a minidisk to CMS. & Make a list of the files on the specified minidisk or directory available to your virtual machine. & Establish a file mode letter for the files on a minidisk or in a directory.","Use the ACCESS command to access the 191 minidisk as \"Z\".","What happened to the A-disk?","What implications does this change have?","Re-access the 191 minidisk as \"A\". What is the command? ===>"]},{"l":"COPYFILE","p":["The COPYFILE command is used to copy and modify files on CMS minidisks. You can:","& Combine two or more files into a single file. & Copy multiple input files into multiple output files. & Change file characteristics (such as file mode number and record format) and/or modify file contents.","Logon as MAINT Copy the file PROFILE EXEC A to a new file called PROFILE EXECSAVE A.","What do the \"=\" signs mean?"]},{"l":"CP","p":["There are several ways to issue CP commands in CMS depending on the setting of the implied CP (IMPCP) option:","& If IMPCP is set to ON, CMS will try to interpret an \"unknown\" command as a CP command. & If IMPCP is set to OFF, you must precede any CP commands with \"CP\"","Or you can precede any CP command with \"#CP\" to directly send the command to the control program.","Find your current IMPCP option setting:","It should say 'ON'. This is the default. It means if CMS does not recognize a command, it will send to CP for processing. Try a CP command(while you are in CMS):","Sure enough, the command works and you see a list of DASDs currently attached to your virtual machine. Next set the IMPCP option to off:","Try the same CP command:","This time, the command failed. With the IMPCP function turned off, CMS did not redirect the unknown command to CP for processing.","You are currently running in the CMS environment. To enter CP mode, type:","The console status in the lower right hand corner of the screen now indicates \"CP READ\".","To return to CMS, type:","The status in the lower right hand corner of the console returns to\"RUNNING\".","8. Another way to issue CP command is to prefix it with '#CP'. Try this:","9. Reset the IMPCP option back to ON:"]},{"l":"FILELIST","p":["The FILELIST command is used to display a list of information about CMS files residing on accessed disks. In the FILELIST environment, information is displayed under the control of XEDIT. You can use XEDIT subcommands to manipulate the list itself. You can also issue CMS commands against the files directly from the displayed list.","1. Logoff as MAINT","2. Logon as MAINT630","3. Display a list of files on your A-disk."]},{"i":"filel-a","l":"filel * * a","p":["& Log on to MAINT if you are not already. & One default setting that can be dangerous, especially if you use F12 to retrieve commands, is that PF12 is set to the FILE subcommand. Sometimes you might not want to save your changes with the stroke of one key. It is recommended that you set PF12 to the ? subcommand, which has the effect of a retrieve key:","& Save your changes with the FILE subcommand. & Make the modified file available to other virtual machines by copying it to the MAINT 19E disk with file mode suffix 2: && Release the current 19E disk:","&& Access the disk as file mode F:","&& Copy it to the MAINT 19E disk (F) with file mode suffix 2 (because the MAINT 19E disk is commonly accessed with a file mode suffix of 2, files will not be seen by other virtual machines unless they have this file mode suffix):","&& Link to the MAINT 19E disk read/write:","&& Save the CMS named saved segment with the following commands:","1. Edit the \"PROFILE EXEC\" file.","1. Logoff MAINT630 2. Logon as MAINT 3. Start an XEDIT session and create a new file HELLO EXEC A.","10. File your changes and exit the file.","10. Insert a new line:","11. Execute the file again. You have successfully created an executable file to execute commands and output messages!","11. Execute the profile to pick up the changes. You should see a message tell you that the device 192 is attached.","2. Add the following statements (in upper case) after the following line 'ACCESS 551 E':","4. Enter Input mode and press Enter:","5. Input the following text. Refer to the XEDIT quick reference guide if you need help.","6. Return to Edit mode:","7. File your changes and exit the file.","8. An REXX EXEC is similar to a Unix/Linux script. Let's run the exec and see what happens:","9. Now update the HELLO EXEC file:","After:","Before:","Copy the PROFILE EXEC file to PROFILE EXECBKP. Press the TAB key to advance the cursor to the CMD column of the PROFILE EXEC file","Enter the text 'q time'","Exit FILELIST.","Let's create a simple REXX EXEC file with an edit session by using the XEDIT command.","Next, modify the PROFILE EXEC file so that you will gain access to a shared utility disk which contains useful scripts for the workshop.","Press the Enter key twice","SET PF12 ?","SET PF12 FILE","The command can be read as \"copy the current file (/) to a file with the same file name of PROFILE (=), a file type of EXECBKP and the same file mode of A (=)\".","The files are sorted by date and time, newest to oldest.","The same XEDIT PROFILE should now be accessible to all virtual machines in the z/VM system.","The XEDIT command looks for the file XEDIT PROFILE configuration file when it is invoked. Not all CMS virtual machines have a copy of this file, so XEDIT sessions look and behave differently. The MAINT 191 (A) disk has a PROFILE XEDIT so when you are editing files on MAINT, the values in this profile are usually in effect.","To configure the XEDIT profile on the SSI cluster, perform the following steps:","Type \"COPY / = EXECBKP =\" and press the ENTER key","Type an 'i' on the line number 3","Update the FILELIST display and you should see the new copy of the profile."]}],[{"i":"ch:systemconfig","l":"System Configuration","p":["As a system programmer, you should become familiar with the SYSTEM CONFIG file.","The SYSTEM CONFIG file contains the primary system definitions used when CP is booted (IPLed). All of the information needed to configure CP statically comes from this file. In an SSI cluster, all members use the same SYSTEM CONFIG file; however, you can specify that certain configuration statements apply only to specific members by qualifying the statements with a system identifier. This topic has examples of this specifying method.","The SYSTEM CONFIG file resides on a special CMS-formatted minidisk (CF0) belonging to the PMAINT user ID. Minidisks containing such objects are called parm disks because when allocated those disks are given a special record category type called \"PARM\". There can be more than one parm disk allocated in a z/VM system for backup and recovery.","Related information: \"Using Configuration Files\" in z/VM: CP Planning and Administration, SC24-6178-09."]},{"l":"Exercises"},{"l":"System parameter disks","p":["The SYSTEM CONFIG file is located on a system's parameter disk. Before you begin updating the SYSTEM CONFIG file, you must access the parm disk(In this case, the PMAINT's CF0).","MAINT's CF1, and CF3 minidisks are traditionally used as the system's parameter disks. Use the QUERY CPDISK command to query what system parameter disks are in use with your system:","& Logon as MAINT & Enter the following command and press Enter"]},{"l":"Steps for accessing the parm disk and creating a backup for SYSTEM CONFIG","p":["Perform these steps to access the CF0 parm disk:","& Logon as MAINT & Access the parm disk (PMAINT's CF0). Type these commands and press the Enter key after each command:","& As a preferred practice, create a backup of SYSTEM CONFIG:","You know you are done when you have access to the CF0 disk and have created a backup of SYSTEM CONFIG on the parm disk."]},{"l":"Edit the SYSTEM CONFIG file","p":["After you linked in \"Multiple Write Mode\", you can edit the SYSTEM CONFIG file with XEDIT editor.","Before you begin updating the SYSTEM CONFIG file, we will create a small REXX that will automate the access to SYSTEM CONFIG disk. From MAINT use XEDIT to create a new file called GETCF0 EXEC A:","Add the follow content:","Execute a script \"GETCF0\" which will access the parm disk as the \"X\" disk."]},{"l":"Steps for updating the CP-owned volume list","p":["[\"] 0082 CP_Owned Slot 10 M01S01","& Add a User_Volume_Include statement. If you followed the instructions from the last chapter you probably have volumes named LNX301, LNX302 and LNX303, so it makes sense to use LNX* wildcard for our volumes. Example:","& Add additional Page volumes to slots in descending order (slots 254, 253, and so forth).","& Add additional Spool volumes to slots in ascending order (slots 11, 12, and so forth).","& Find the string \"DUMP & SPOOL VOLUMES\". At the XEDIT command line, type this command and press the Enter key:","& Find the string \"User_Volume_List\" in the section titled \"User volumes for local minidisks.\" At the XEDIT command line, type this command and press the Enter key:","& For shared user volumes, update the User_Volume_List statements in the\"Shared User Volumes\" section.","& If not already doing so, you must edit the SYSTEM CONFIG file. Type this command and press the Enter key:","& In the prefix area for the last USER_VOLUME_LIST statement, type \"i2\" and press the Enter key. For instance:","& Include the LNX301, LNX302 and LNX303 volumes on this list (We will use a wildcard LNX*)","& Logon as MAINT & Edit the SYSTEM CONFIG file. Type any of these two commands to get access and edit the file, and press the Enter key:","& Save the file. At the XEDIT command line, type this command and press the Enter key:","& To add the PAGE volume, find the string \"PAGE & TDISK VOLUMES\" (Tip: you may be able to see this section just below the SPOOL section). At the XEDIT command line, type this command and press the Enter key:","& When you finish the User_Volume_List statements, press the Enter key.& Save the file. At the XEDIT command line, type this command and press the Enter key:","00080/**********************************************************************/","00081","00083","00084/**********************************************************************/","Add the Page volume previously formatted (M01P02) above the M01P01 line.","Add the Spool volume previously formatted (M01S02) below the M01S01 line.","Because all minidisks are managed by CP, all volumes that house minidisks must be attached to the z/VM system. CP must control the volumes so it can reorient channel programs initiated by a guest operating system. The guest perceives its disks as starting at cylinder 0, but the true location of the guest's minidisk starts at an offset of real cylinder 0.","Before you begin: You need to format and allocate the user volumes you need. You need to access to the parm disk.","Before you begin: You need to format and allocate your paging, spooling, temporary disk or Perm Volumes. You need to access to the parm disk.","Duplicate the following line:","Duplicating a line on XEDIT To duplicate a line in XEDIT place a double quote (\") in the line number and press enter, example:","Example: If all your Linux user volumes have a volume identifier starting with LNX, you can add this statement:","If a volume is normally attached to the system using a USER_VOLUME_INCLUDE statement, CP does not notify the operator if the volume is not mounted. If a user volume is necessary for normal system operation, specify it with a USER_VOLUME_LIST statement so that the operator is notified during system initialization if the volume is not mounted.","If no user volumes are attached to the system at IPL time, the real devices housing minidisks need to be attached manually. Otherwise, virtual machines will have no disks. To avoid manual attachment, you can tell CP to look for DASD volume labels and attach those devices at IPL time.","Just as there is a list of DASD volumes that CP should automatically attach to the system during IPL for access to CP system areas, there is a list of DASD volumes that CP should automatically attach to the system for user minidisk definitions.","Or","Perform these steps to update the CP-owned volume list:","Perform these steps to update the user volume list:","Question: Is there another way to add those LNX* disks to the User Volume List?","R:","The CP-owned volume list is the place where you specify the labels of paging, spooling, and temporary disk volumes that CP should automatically attach to the system during IPL. These volumes contain the system data for your z/VM system. All other volumes on the system are considered user volumes.","The USER_VOLUME_LIST statement directs CP to attach specific user DASD volumes at z/VM load (IPL) time. The USER_VOLUME_INCLUDE statement allows you to create a general volume identifier and to include all volumes that match the general identifier.","Unless you qualify user volume statements with a system name, the user volumes are attached to all members in the SSI cluster.","You should now see something like the following:","You will see a file like the following:"]},{"l":"Steps for updating the FEATURES statement","p":["The FEATURES statement in SYSTEM CONFIG allows you to modify attributes associated with the running system at IPL time. In this procedure, you will modify some of the features.","& The Auto_Warm_IPL feature causes CP to bypass prompting for start options, provided the previous system shutdown was successful. The feature allows for a fully automated startup of z/VM.","& The Clear_TDisk feature causes CP to erase temporary disks fully(that is, overwrite the entire temporary disk with zeros) after those disks are detached. The feature prevents another user who might define an identically sized temporary disk from accessing data written by the previous user.","& The Retrieve defines the default and maximum number of retrieve buffers allowed per user on your system. Retrieve buffers create a command history, from which users can retrieve commands previously issued. Command retrieval is usually assigned to a program function key such as PF12 (F12). The assignment is through the CP SET command, SET PF12 RETRIEVE. By pressing PF12, a command is retrieved and written back into the command area on the terminal screen. You probably do not need to change these settings.","& The Passwords_on_Cmds feature allows users to use passwords when using the CP AUTOLOG, LINK, or LOGON commands.","& The Disconnect_timeout feature controls whether and when a virtual machine is logged off after it has been forced to disconnect. You will turn this feature off, so that any virtual machine that has been forced to disconnect will not be logged off.","& The ShutdownTime and Signal ShutdownTime features enable a virtual machine to register with CP to receive a shutdown signal when z/VM is shutting down. CP waits to shut itself down until the time interval (in seconds) is exceeded, or all of the virtual machines enabled for the signal shutdown have reported a successful shutdown. Some Linux distributions support this function, which allows Linux to shut down cleanly before z/VM shuts down. []","Note: Unless you qualify the features with a system name, these features will be the same for all members in your SSI cluster.","Procedure: Find the line containing the text \"Features Statement\", it is a section. At the XEDIT command line, type this command and press the Enter key:","You will see something like this:","and we will modify to something like this:","On the next section we will setup the devices to start up online."]},{"l":"Set up control access to devices at startup","p":["Sometimes your z/VM system might have access to devices that you do not want to be varied online during IPL. For instance, the devices might duplicate labels of devices used by your production system, or might be in use by other LPARs or systems. You can specify ranges of devices that z/VM should not vary online during IPL.","Find the section titled \"Status of Devices\". At the XEDIT command line, type this command and press the Enter key:","On the line with the string \"Devices\", type i in the prefix area and press the Enter key:","Type the following line, then press the Enter key:","Type over the device range on the ONLINE_AT_IPL statement with a device range specific for your system.","Add a new ONLINE_AT_IPL statement for each device range. Use the i prefix command to add lines.","The result:"]},{"l":"Set addresses for consoles","p":["During the first IPL of your z/VM system, you needed to specify a load parameter so you could communicate with the Stand-Alone Program Loader(SAPL). The reason is the new z/VM system did not know which device addresses to use to display messages and prompts. The installation system includes default device addresses for use as the system operator console and emergency messages console, but these addresses rarely correspond to your production hardware configuration. So you will not need to use the SAPL each time you IPL z/VM, you need to supply the address of your IPL console and your emergency messages console on the Operator_Consoles statement. During IPL, CP tries each device on the Operator_Consoles statement (from left to right) until it finds an active device. If no devices on the list are active, CP loads a disabled wait state and terminates. The emergency message console is used as an additional console during failures. Define the emergency console with the Emergency_Message_Console statement.","Find the section titled \"Console Definitions\".","Set 0009 as the first device on the Operator_Consoles and the Emergency_Message_Consoles statement. This will tell z/VM to open operator communications with device 0009 which is the device address of the virtual console. This will alleviate the need for passing load parameters at the next boot.","Save all the changes you have made so far and exit the SYSTEM CONFIG file."]},{"l":"Steps for checking the syntax of the SYSTEM CONFIG file","p":["Since the SYSTEM CONFIG file contains very important data, extreme care must be taken to ensure its contents are correct. The system may not start correctly if this file contains errors. Fixing the errors can be cumbersome. z/VM provides a utility, CPSYNTAX, in the 193 minidisk to check the syntax of the SYSTEM CONFIG file.","Procedure","& Logon as MAINT & To gain access to the CPSYNTAX command, access the 193 disk as F. From the command line, type the following command and press the Enter key:","& Run the CPSYNTAX command. From the command line, type this command and press the Enter key:","& Check for a zero return code. If you do not get a zero return code, modify the SYSTEM CONFIG file and rerun the CPSYNTAX utility. Example of a non-zero return code:","& Lets create a FREECF0 EXEC on your MAINT \"A-disk\", it will release the cf0 disk for us on future updates:","& Execute the script \"FREECF0\" to release and detach the parm disk CF0."]},{"i":"restart-zvm-and-verify-changes","l":"Restart z/VM and verify changes","p":["& Check features Use the QUERY RETRIEVE command to display the setting of the retrieve key buffer limits.","& Check offline devices","& Check paging and spooling space","& Check the system identifier Use the IDENTIFY command to display information about your user ID and node","& Check the user volume list","& Shutdown and IPL your z/VM","A maximum of 99 commands can now be stored and retrieved from the retrieve key buffer. The retrieve keys (PF11 and PF12) are defined in the PROFILE EXEC file.","Display the allocation information for paging space.","Display the allocation information for spooling space.","Environment with extra PAGE and SPOOL","If you added another disk for spool, the output should show that the system now have two spool volumes.","In this exercise, you will learn to use some new CP/CMS commands to verify the changes you have made to the system.","Log on as MAINT (password WD5JU8QP)","Once again, use the QUERY DASD command to display any offline devices.","Press the Enter Key to go from \"VM READ\" to \"RUNNING\" State.","Press the Pause key if the console status is \"MORE...\"","The output should show that the system now have two paging volumes.","This is our actual environment after the changes:","To get a z/VM logo, press the Enter key.","Use the QUERY ALLOC to display the number of cylinders or pages that are allocated, in use, and available for DASD volumes attached to the system.","Use the QUERY DASD command to display a list of the DASDs that are attached to the system.","When the system shuts down and re-IPLs, you will see a number of IPL messages. z/VM restores the system to the same state as it was prior to shutdown (for instance, with OPERATOR disconnected).","Your system identifier should be ZVMWSxx. The system identifier is also displayed at the lower right hand corner of your console."]}],[{"l":"Network Concepts","p":["The physical network in System z consists of devices known as Open Systems Adapters (OSAs). Several varieties are available, such as the OSA-Express4S and OSA-Express5S. These are capable of handling up to 640 TCP/IP stacks simultaneously, including HiperSockets for inter-LPAR communication. An IBM System zEC12 provides up to 96 OSA-Express5S ports for external network communications. The Open Systems Adapter supports both copper and fiber Ethernet connections at speeds of up to 10 Gb.","As might be expected, the z/VM feature to access the Internet Protocol network is TCP/IP for z/VM. OSA-Express devices can be virtualized through a virtual switch (VSWITCH) device to many Linux guests. It is available using special z/VM machines known as VSWITCH controllers. Each Linux guest connects using a virtual device controlled by the qeth module to a virtual switch system in a z/VM LPAR.","An important benefit of the VSWITCH system is that it can be set up with redundant OSA devices that provide a failover network system on z/VM","HiperSockets provide high-speed interconnectivity among guests running on a System z. This technology does not require any special physical device configurations or cabling. The guests simply communicate with one anot her internally via the in-memory capabilities of the PR/SM hypervisor. HiperSockets, however, are not intended to be used for sophisticated networking and should not be used for external traffic.","Both OSA-Express and HiperSockets use the Queue Direct I/O (QDIO) mechanism to transfer data. This mechanism improves the response time using system memory queues to manage the data queue and transfer between z/VM and the network device"]},{"l":"Network Facilities","p":["On the Mainframe, quite a number of different network devices are available for use. Many of these come from a historical background, and should not be used for new implementations. They commonly stay, however, to continue the support of previous installations on newer hardware. Linux on System z can operate using all common network interfaces but for new installations, there are recommended methods for operation depending on the use case.","The following are some technologies that you will find in the System z wo rld that are not used or even seen on x86 systems. This section clarifies some new facilities that you are going to find when you are migrating from x86 to System z. We provide some brief information that you can use to start your network planning. In each subsection, you can find a reference for more detailed information."]},{"i":"the-open-systems-adapter-osa","l":"The Open Systems Adapter (OSA)","p":["The Open Systems Adapter (OSA) is a hardware network controller. It is installed in a Mainframe I/O cage and provides connectivity to clients on local area networks (LANs) or wide area networks (WANs). It ca n be directly attached on Linux but will typically be attached to virtual switches (read more in the \"Virtual switch\" section below). You can find more technical information about OSA cards on IBM zEnterprise EC12 Technical Guide, SG24-8049."]},{"l":"OSA with Link Agregation","p":["You can aggregate multiple physical OSA cards in to a single logical link, which is called a link aggregation group (LAG). This configuration increases the bandwidth and provides nondisruptive failover. How to co nfigure it is well described on Advanced Networking Concepts Applied Using Linux on IBM System z, SG24-7995."]},{"l":"HiperSockets","p":["HiperSockets is a microcode implementation that emulates a Logical Link Control Layer of an OSA interface. HiperSockets provides near zero latency at memory speed communications between servers running in different LPARs. When connecting a Linux guest to an IBM z/OS system on the Mainframe, the HiperSockets network in Layer 3 mode is the method to use. HiperSockets must be configured in the I/O configuration of the Mainframe. HiperSockets do not provide external connections. If an external connection is required, either a HiperSockets bridge must be implemented by using a VSWITCH, or a Linux guest must be set up as a router.","HiperSockets provide a very fast connection between LPARs. They provide an easy way to connect many Linux servers to a z/OS system in the same Mainframe. This direct connection without involving real hardware is an important factor to simplify setups with many Linux systems that must be connected to z/OS. Some benefits are explained in Set up Linux on IBM System z for Production, SG24-8137."]},{"l":"Virtual Switch","p":["A virtual switch (VSWITCH) is a software program that enables one virtual host to communicate with another virtual host within a computer system. Virtual switches typically emulate functions of a physical Ethernet switch. In Linux on System z, a VSWITCH provides direct attachment of z/VM guests to the local physical network segment. The VSWITCH allows IP network architects and network administrators to treat z/VM guests as a server in the network.","The switched network inside a z/VM Operating System commonly is implemented with a VSWITCH. When running the VSWITCH as Layer 2, it behaves similar to a real switch just between virtual machines.","The actual speed of a connection with a VSWITCH depends on a number of different variables. The type of traffic is as important as the real underlying hardware and the maximum transmission unit (MTU), which is the maximum size (in bytes) of one packet of data that can be transferred in a network. Common to all of those solutions is that the VSWITCH is faster than a real switch connected to the Mainframe would be.","VSWITCHes do not need a connection to an OSA card to operate. They can also provide purely virtual networks. This also simplifies the setup of private interconnects between guest systems. When creating private interconnects in an SSI with LGR enabled, the use of dedicated VLANs with external interface is recommended. This is necessary to accomplish the private connection between guests that run on different nodes in the SSI.","Implementing VLANs also helps if different guests run in different security zones of a network. It is easy to configure network interfaces to Linux guests that provide only selected VLANs to the guest. These can be configured either as tagged VLANs or as single untagged VLAN on an interface.","The VSWITCH infrastructure provides two basic configuration options. One configures user-based access, the other configures port-based access. From the possibilities, both are equivalent, just the configurations differs.","You can read more about VSWITCH benefits on Set up Linux on IBM System z for Production, SG24-8137, and technical information about Advanced Networking Concepts Applied Using Linux on IBM System z, SG24-7995."]}],[{"i":"basic-tcpip-configuration","l":"Basic TCP/IP Configuration"},{"l":"TCPIP Service Machines","p":["This section describes the virtual machines that are necessary to provide basic and optional TCP/IP services. The virtual machines listed here comprise a set of \"default\" TCP/IP virtual machines that are defined as part of the z/VM system when it is installed.","While various TCP/IP virtual machines have specific definition requirements, all TCP/IP servers must maintain links to the following minidisks, to allow for correct operation:","Minidisk Description"]},{"l":"Required Virtual Machines","p":["The following virtual machines are required to provide basic TCP/IP services:","Machine Function"]},{"l":"Optional Virtual Machines","p":["There are many optional virtual machines that you can setup to perform TCP/IP server functions. Some of these servers include FTPSERVE, IMAP, PORTMAP, NAMESRV, SSLSERV, SMTP, etc."]},{"l":"Configuration files","p":["This section lists the various TCP/IP configuration files which are necessary to provide basic TCP/IP services for most environments.","The first file, IBM DTCPARMS, contains server configuration definitions. The next three files, PROFILE TCPIP, HOSTS LOCAL, and ETC HOSTS, are configuration files for the TCPIP server virtual machine. The next two files, TCPIP DATA and ETC SERVICES, need to be accessible to all TCP/IP servers, applications, and users; these files contain information that is (or may be) referenced by all users. ETC GATEWAYS contains routing information for distant networks and hosts."]},{"l":"The DTCPARMS files","p":["Configuration of each server is controlled by a set of files with a file type of DTCPARMS. These files may contain two types of information:","& Server class names that define the application protocols available for all server virtual machines. & Individual server user IDs and their associated server class, as well as the operational characteristics of the server (security, devices, parameters, etc.).","The TCP/IP server initialization program searches for server definitions in a hierarchical fashion. The following table lists the DTCPARMS files in the order that they are searched, along with a description of each file.","File Purpose"]},{"l":"The TCPIP DATA File","p":["The TCPIP DATA file defines system parameters used by TCP/IP client applications. It is used to specify configuration information for single or multiple host systems. It also allows you to specify:","& Host name of the VM host & User ID of the TCPIP virtual machine & Domain origin of the host & Output trace & Name server specifications","A sample TCP/IP DATA file is shipped as TCPIP SDATA on the TCPMAINT 592 disk."]},{"l":"The ETC HOSTS Files","p":["The local host files contain information needed for local host name resolution. Any domain name or IP address specified in this file is accessible for use on your network. Local host files are used to create the site table, which enables name resolution and reverse name resolution without using a domain name server.","TCP/IP for z/VM offers two local host files for domain name resolution and reverse name resolution. The old HOSTS LOCAL file (which supports IPv4 only), and the preferred ETC HOSTS file (which supports both IPv4 and IPv6).","The ETC HOSTS file does not require additional processing to create the site tables used for name resolution. The site tables are created dynamically by the resolver when the ETC HOSTS file is used. Use of the HOSTS LOCAL file requires that you run the MAKESITE command to create the site tables. Whenever changes are made to the HOSTS LOCAL file, you must run the MAKESITE command to recreate the site tables.","A sample file, ETCHOSTS SAMPLE, is supplied with the TCP/IP distribution tapes on the."]},{"l":"The TCPIP server profile file","p":["When the TCPIP virtual machine is started, TCP/IP operation and configuration parameters are read from an initial configuration file. TCP/IP searches for an initial configuration file in the following order and uses the first file present in that order:","& userid TCPIP, where userid is the user ID of the of the TCP/IP server& node_name TCPIP, where node_name is the system node name returned by the CMS IDENTIFY command & PROFILE TCPIP","This file is used to customize your system, specify system operation, Telnet, and network parameters. If no file is found, TCP/IP uses server default values.","A sample initial configuration file is provided as PROFILE STCPIP on the TCPMAINT 591 disk."]},{"l":"Exercises"},{"l":"IPWIZARD","p":["You can initially configure TCP/IP via the IPWIZARD command which is generally used just once. After IPWIZARD creates the initial configuration files, they are typically maintained manually.","& Log on as MAINT. & The IPWIZARD command is on the MAINT 193 disk. Issue the ACCESS command so you will pick up IPWIZARD from that minidisk.","& Invoke the IPWIZARD.","& At the '*** z/VM TCP/IP Configuration Wizard ***' panel. Fill in the following data:","& Continue with next step.","Press the F8 key","& At the '*** General Interface Configuration Panel ***' panel. Fill in the following data:","Press the PF8 key","& At the '*** QDIO Interface Configuration Panel ***' panel. Fill in the following data:","& Start the network configuration.","Press the PF5 key to Process","& The TCP/IP stack (TCPIP) must be restarted as part of this procedure. Would you like to restart TCPIP and continue?","Enter '1' for Yes","& The TCP/IP configuration is complete when you see these messages:","& At this point, your z/VM system should be on the network. Go to a DOS prompt (or Linux session) and try to ping your z/VM system."]},{"i":"viewing-tcpip-configuration-files","l":"Viewing TCP/IP configuration files","p":["Let's learn what the IPWIZARD did for you.","& Logon to the TCPMAINT virtual machine","Logoff of MAINT","Logon to TCPMAINT","& List the CMS disks that are accessed via the QUERY DISK command. Note that the TCPMAINT 198 disk is accessed as your disk:","& This is an important disk for TCP/IP configuration files. List all the files on this disk. What is the command?","===>"]},{"l":"PROFILE TCPIP","p":["& Look at the file PROFILE TCPIP. You can type an X, which is a synonym for X EDIT right in the FILELIST command next to the file you want to edit. & Search for the string DEVICE. You should see many of the values that you typed into the IPWIZARD. Following is an example file for ZVMWSXX:","& Exit this file, enter:"]},{"l":"SYSTEM DTCPARMS","p":["& Now look at the file SYSTEM DTCPARMS. & You should see the following:","This file is how the OSA devices 800, 801 and 802 are attached to the TCPIP service machine.","& Exit this file:","Press the F3 key (or type qq)","& If you are still in FILELIST mode, exit and return to RUNNING mode.","Press the F3 key"]},{"l":"Renaming the PROFILE TCPIP file","p":["One change that is recommended is to rename your main configuration file, PROFILE TCPIP. It is possible that applying service to z/VM can overwrite the PROFILE TCPIP file.","& Use the RENAME command to change the file:","& Now you should test this change. You can do this by forcing the TCPIP user ID off the system (logging it off) and then logging on interactively and watching it come back up. This is analogous to a Linux\"service network restart\" command. Be careful when you do this. If you are using the network to get to your system, you will immediately lose the connection.","& Now logon to TCPIP and start the TCP/IP stack.","Press Enter to run the PROFILE EXEC","Press Enter again to start the TCP/IP stack. Note that your renamed profile is used:","& Now should you LOGOFF of TCPIP or DISCONNECT?","===>","The former will kill the stack while the latter will allow it to run. A VM service machine is analogous to a Linux daemon. Use the #CP DISC command. The #CP punches through to the CP level."]},{"l":"Verify the TCPIP setup","p":["If all went well, your z/VM should now be on the network. Let's try a few things to verify the configuration is correct.","& Start a TN3270 session and connect directly to you z/VM system. You now have the ability to log on to more than one virtual machine at a time. & Log on as TCPMAINT. & Use the NETSTAT command to display information about your network. Display the device information. You should see information about the QDIO1 device.","Display the gateway information. You should see information about the gateway.","& Ping the gateway (first hop).","& Tracing routes through a network is sometimes necessary to help debug connectivity issues. Try the TRACERTE command and trace the route to another IP:","& Log off the TCPMAINT virtual machine."]},{"l":"Create a ETC HOSTS file","p":["The local host files contain information needed for local host name resolution. Any domain name or IP address specified in this file is accessible for use on your network. Local host files are used to create the site table, which enables name resolution and reverse name resolution without using a domain name server.","A sample file, ETCHOSTS SAMPLE, is supplied with the z/VM system deliverable on the TCPMAINT 592 disk. You can use this file as a guide for creating a customized ETC HOSTS file, that should reside on this same minidisk (TCPMAINT 592). Because each site is unique, the statements within the ETC HOSTS file must be customized for your installation.","& Log on as TCPMAINT.","& Identify disk 592 file mode","& Copy the sample file from disk 592 to ETC HOSTS","& Edit the file and add the IP from another student","& Test it pinging the z/VM using its name:"]},{"i":"sec:autologtcpip","l":"Configure AUTOLOG1's PROFILE EXEC","p":["When z/VM IPLs, normally the AUTOLOG1 virtual machine is logged on(unless the NOAUTOLOG parameter is specified at IPL). Its PROFILE EXEC is run when CMS IPLs. Using this file, perform the following tasks:","& Limit minidisk cache in main storage and turn it off in expanded storage with the SET MDC command. & Start virtual machines that should be started using the XAUTOLOG command","& Log on to AUTOLOG1.","& Before pressing Enter at the VM READ prompt, type acc (noprof so that the PROFILE EXEC is not run:","& Make a copy of the original PROFILE EXEC","Edit the PROFILE EXEC and add the following three lines below the Customer processing comment:","& The TCPIP VM should start automatically during the IPL.","This is our actual environment after the changes:","Environment with TCPIP"]}],[{"l":"Virtual Switch"},{"i":"setting-up-a-virtual-switch-vswitch-with-failover","l":"Setting up a virtual switch (VSWITCH) with failover","p":["In this exercise, we will setup the Virtual Switch to use two controllers and two separate sets of OSA devices. If the primary controller fails, the backup controller will take over. Likewise, if the primary OSA fails, traffic will be switched to use the backup OSA devices.","The high-level steps in the process are in the sections that follow:","& Define a VSWITCH & Shutdown and re-IPL z/VM","Define the Virtual Switch in the SYSTEM CONFIG file to ensure the Virtual Switch is defined on IPL. Use the MODIFY VSWITCH statement to authorize a z/VM user to attach to the Virtual Switch.","& Log on as MAINT. & Display a list of available OSA devices. You should see devices 803-805 and 806-808 free.","Now you can execute the GETCF0 script to get write access to the primary parm disk.","& Edit the SYSTEM CONFIG file.","& Add the following statements to the end of the file to:","(Change the X in macprefix to your student number)","& Save the changes end exit the file.","& Check the syntax by using the CPSYNTAX command.","& Execute the script to release write access to the primary parm disk."]},{"l":"Test VSWITCH configuration","p":["Restart the z/VM system and verify the changes you have made in the networking section.","& Shutdown and re-ipl your z/VM system.","& Log on as MAINT.","& Display the VSWITCH:","Is the VSWITCH VSW1 defined?","& To see the status of the VSWITCH controllers, issue the command:","Which controller is your primary?","If any of the above commands indicated you have problems in your setup, review your work and try again. You will test the failover capability of the VSWITCH in a later exercise.","This is our actual environment after the changes:","Environment with TCPIP and VSWITCH"]}],[{"i":"cap:DIRMAINT","l":"Directory Maintanace","p":["Before create our first virtual machine (VM), we are going to learn about DIRMAINT."]},{"l":"DIRMAINT","p":["IBM Directory Maintenance z/VM (DirMaint) is a Conversational Monitor System (CMS) application that helps you manage your VM directory. Directory management is simplified by DirMaint's command interface and automated facilities. DirMaint's directory statement-like commands are used to add, delete or alter the directory. DirMaint's error checking ensures that only valid changes are made to the directory, and that only authorized personnel are able to make the requested changes. Any transaction requiring the allocation or deallocation of minidisk extents can be handled automatically. All user-initiated transactions are password controlled, and are recorded for auditing purposes.","Features:","& Automated control of the z/VM user directory through a command interface & Auditing and controls for access to the directory & Error checking & Automated facilities for minidisk allocation, deallocation, and copying. & The ability to work in conjunction with external security managers, such as RACF.","There are individual Dirmaint commands for each directory statement.","The general format of a DirMaint command is:","Where:","DIRMaint is the name of the DirMaint EXEC.","prefix is an optional command prefix keyword and any operands required for that keyword.","command is the DirMaint command.","cmd_options are any options to be passed to command.","Example:","The DirMaint command provides the interface between the command issuer and the DirMaint service machine. The issuer types the DirMaint command followed by a command operand. The DirMaint command routes the command to the DirMaint service machine where the service machine does validation checking, and either processes the request or rejects it with an appropriate message. The request sent to the service machine may include prefix keywords.","The DirMaint command may be abbreviated to DIRM."]},{"l":"Extent control","p":["The EXTENT CONTROL file defines any volume that is being used for minidisk allocation and provides a template, or layout, of how the space should be used. In addition, it also contains system and device default values used during allocation operations.","This file can be updated dynamically with the DIRM DASD command.","To check how the EXTENT CONTROL file looks like you can use:","Receive the file and check the content:","You will see something like this file:","Each section has a special function:","& REGIONS: Defines an area or region on your DASD volume for use during DirMaint automatic allocation. & GROUPS: Defines a grouping of regions for use during DirMaint automatic allocation. & EXCLUDE: Defines users or user/device combinations that should be considered as excluded by the DirMaint DASD subsystem. & AUTOBLOCK: Defines blocking factors and device architectures for various device types. These supplement or override the IBM supplied definitions in the AUTOBLK DATADVH file. & DEFAULTS: Defines the default maximum size for various DASD devices. These supplement or override the IBM supplied definitions in the DEFAULT DATADVH file. & END: Defines the ending tag for all sections.","We are not going to edit this file manually, we are going to use DIRMAINT commands to avoid errors and typos. You can close the file using \"QQUIT\"."]},{"l":"Adding disks to Extent control","p":["Assuming that you have executed 2.11.6.2, you have disks 301, 302 and 303 formatted as PERM. These 3 disks will be used to create our VMs, but first we need to assign them to DIRMAINT. We are going to create REGIONS (using all cylinders available) and POOLs of disks. We are going to use the label of each disk as the name of the REGION, ex: LNX301, LNX302 and LNX303.","The DIRMAINT command that add disks to EXTENT CONTROL is:","If you type DIRM DASD logged as maint the following panel will open for you:","We will assign DASD 301 (LNX301) to the new region LNX301. The panel below is an example:","Device Types You need to ask the instructor what is the device type for your PERM disks. The example below uses 3390-09, but there are others like 3390-03 and 3390-27.","When you get it filled as needed press F5 to submit your request or F3 to cancel it.","The same result above could be accomplished using the following command line (to avoid the panel):","To apply the changes to EXTENT CONTROL:","If you need to query information about a specific region you can execute:","It will provide, depending the disk type, the following output:","If the REGION is not valid, the following output will appear:"]},{"l":"Exercise","p":["& Add LNX302 and LNX303 to EXTENT CONTROL using DIRM DASD command. && Add LNX302 using the panel && Add LNX303 using the command line && Check both using DIRM DASD QUERY command. && Apply the changes using DIRM RLDE"]},{"l":"Creating a pool of disks","p":["We have assigned LNX301, LNX302 and LNX303 to DIRMAINT. This setup allow us to assing disks to a VM using the REGION name, but we didn't group them yet. These groups of disks are called POOLs, and it is another abstraction that can be used to assign disks to a VM.","Using the same DIRM DASD panel we can create our new POOL, lets call it\"LINUX\":","When you get it filled as needed press F5 to submit your request or F3 to cancel it.","The same result above could be accomplished using the following command line (to avoid the panel):","To apply the changes to EXTENT CONTROL:","You can query your new group information using the following commad:","It will provide the following output:","Our Environment with DIRMAINT"]}],[{"l":"Creating a Virtual Machine","p":["The z/VM user directory specifies the configuration and operating characteristics of virtual machines. A z/VM user directory exists in two forms: a source form that consists of one or more CMS files, and an object form, created from the source, on a CP-formatted disk. Each virtual machine has a directory entry. Here is a sample directory entry:","User Directory example","The sample on figure 9.1 is a simple Linux guest. This chapter will guide you to build a more complex guest using other directory statements like PROFILE and DIRMAINT as a tool to manage those entries.","An entry begins with one of the following statements: GLOBALDEFS (global definitions entry), PROFILE (profile entry), USER (user entry), IDENTITY(identity entry), or SUBCONFIG (subconfiguration entry). For our workshop the most important entries are PROFILE and USER, anyway the others entries are also explained."]},{"l":"DIRECTORY definition","p":["The DIRECTORY Definition consists of one or more DIRECTORY control statements that define the output of object directories. The DIRECTORY statement defines to CP the device on which you have allocated space for the directory. (These devices must also be a CP_owned volume). The user directory itself is managed by DIRMAINT.","The following DIRECTORY definition simply says DASD volume M01RES has directory space allocated on it for the object directory. It is a 3390 device type, and 123 is the virtual device number which contains the directory.","You can query DIRECTORY definitions info executing:"]},{"l":"GLOBAL definition","p":["The Global Definition section begins with the GLOBALDEFS directory control statement. It also includes directory control statements that define global settings to be used across all user definitions. This is an optional statement. If specified it must directly precede all PROFILE and USER definitions. There can be only one GLOBALDEFS directory control statement specified. The user directory that came with the installed system contains the following Globaldefs:"]},{"l":"PROFILE definitions","p":["Each PROFILE definition begins with a PROFILE directory control statement and consolidates other directory control statements that are commonly used across multiple users. When PROFILE is specified it must follow the last DIRECTORY statement, the global definition section (if any), and precede the USER statements.","This is an example of profile:"]},{"l":"USER definitions","p":["User definitions (virtual machine definitions or guests) begin with a USER directory control statement and define an individual virtual machine.","The USER statement starts each virtual machine's directory entry. It also defines a user ID and password, a logon and maximum virtual storage size, and command privileges.","Here is one example of user definitions, in this case the PMAINT user:","The above directory control statement defines a virtual machine called PMAINT, whose password is 'WD5JU8QP'. When PMAINT logs on it is allocated 128 Megabytes of virtual storage. It is allowed a maximum of 1000 Megabytes of virtual storage, and it is a class G, or general user.","The following table contains a description of different command classes:","Class User and Function","Privilege Classes"]},{"l":"Creating a simple CMS user","p":["This section will provide you instruction to create a CMS VM. In the first step we will not even have disks on this VM and we will learn how to add minidisks and how to resize it. This machine will be used to host some files that will be used on next chapter( 10- )."]},{"l":"How to create a new VM","p":["Our objective is to create a new VM called VMTOOLS. There is a special file type called DIRECT. We are going to create a new file called VMTOOLS DIRECT that will host the directory statements needed to run our CMS VM.","& Logged as MAINT","& Create a file called VMTOOLS DIRECT","& Input the following content:","The blue line defines the name, password, amount of memory and privilege class of our new VM","The green lines are related to CMS. We are linking disks that are required to IPL CMS in our VM","The red lines are related to some standard devices, like Reader, Punch, Printer and Console.","& Save the file and quit","& To add our new VM to the directory we are going to use DIRM ADD command:","& If you got RC = 0, we are good, otherwise there is a typo in your VMTOOLS DIRECT file, fix the error and try again."]},{"l":"How to add a minidisk","p":["& Try to login in your new VM and you will see a message:","& Ops! We don't have an \"A-disk\" to our VM... we need to create it.","& Logoff from VMTOOLS","& Logon on MAINT","& Execute:","& It will show a PANEL that need to be filled like this one (The passwords are in blank but you can set as: READ WRITE MULTI):","DASD AMD","& We are creating a new minidisk 191, from our LINUX GROUP, with 5 cylinders. The label is VMT191.","& The expected result is:","DASD AMD result","& If you want to check how different is your VMTOOLS directory execute:","& RECEIVE <n> (REP","Where <n> is the reader id that will show at the begging of the response.","Reader ID","& You can open using XEDIT and you will see the new MDISK statement at the bottom"]},{"l":"How to change minidisk size","p":["& Execute","& DIRM FOR VMTOOLS CMD will open a panel","& We are going to increase the size of 191 minidisk from 5 cyl to 10 cyl","& Follow the panel:","DASD CMD","& Press F5 to submit."]},{"i":"exercise-1","l":"Exercise","p":["Add a new minidisk:","& Address: 192 & Device type: 3390 & On AUTOG: && Size: 300 && Grpname: LINUX & Link Mode: MR & Label: LNX192 & Passwords: && READ WRITE MULTI"]},{"l":"FTP files to VMTOOLS 192","p":["During the class the instruction will teach you how to FTP files to our new minidisk 192. These files are essential to the Linux installation. These steps are not documented here because it depends on your environment.","These instructions are present in the slide deck."]},{"l":"Creating our Linux Profile","p":["On this section a profile to be included by Linux virtual machines will be created.","& Log on as MAINT. & Create the user directory source file.","& In XEDIT tipe \"INPUT\" to enable input mode","& Paste de following content","& Hit ENTER two times to exit input mode.","Explanation","& PROFILE LINDFLT - Define the profile named LINDFLT & COMMAND CP SET PF12 RETRIEVE - Enable F12 to retrieve commands & COMMAND CP SET PF11 RETRIEVE FORWARD - Enable F11 to & COMMAND SET VSWITCH VSW1 GRANT&USERID - Grant access to VSW1 & COMMAND DEFINE NIC 600 TYPE QDIO - Define a network card on vaddr 600 & COMMAND COUPLE 600 TO SYSTEM VSW1 - Couple the NIC to VSW1 & IPL CMS - When the user ID is logged on, IPL CMS & MACH ESA 2 -The machine architecture is ESA with a maximum of 4 CPUs. & OPTION APPLMON - To enable Linux guest for data gathering & CPU 00 BASE - CPU 00 is the base and the only CPU set for now & SPOOL 000C 2540 READER * - Definition of a virtual reader & SPOOL 000D 2540 PUNCH A - Definition of a virtual punch & SPOOL 000E 1403 A - Definition of a virtual printer & CONSOLE 009 3215 T - Definition of a console & LINK MAINT 0190 0190 RR - Link to MAINT's 190 minidisk with read access & LINK MAINT 019D 019D RR - Link to MAINT's 19D minidisk with read access& LINK MAINT 019E 019E RR - Link to MAINT's 19E minidisk with read access & LINK VMTOOLS 192 191 RR - Link to VMTOOLS 192 minidisk as 191 with read access & LINK TCPMAINT 592 592 RR - Link to TCPMAINT's 592 minidisk with read access. This is where the ftp utility is located.","& Save and quit XEDIT using \"file\" command.","To add our new profile to z/VM directory use DIRM ADD:"]},{"l":"Create the LINUX1 virtual machine","p":["To create a Linux image we will use a DASD 3390-09 (10016 cyl) as base. DIRMAINT has a feature called PROTODIRs that we can use to create directory template for our Linux.","& First, grab a copy of LINUX PROTODIR","& Receive a file called LINUX PROTODIR and edit it","& In XEDIT tipe \"INPUT\" to enable input mode","& Paste de following content","& Save and close the file","& Apply the LINUX PROTODIR changes using the following command","& Create the virtual machine definition for LINUX1. []","& If you receive RC = 0, you should be able to query your new VM:","& If you receive \"Invalid option - LINUX1\" response, something wrong occured on step[step:createlinux]","& Create LINUX2 VM. This VM will be used on chapter 11()"]}],[{"i":"chap:installinglinux","l":"Installing Linux"},{"l":"Linux PROFILE EXEC","p":["& Logon on VMTOOLS","& Inside VMTOOLS 192 disk make sure that there is a file called PROFILE EXEC.","& If it is empty, use input mode and paste the following content:","The PROFILE EXEC that you just copied is a REXX EXEC that is analogous to a .bash_profile startup script. If the user ID is logged on in a disconnected mode (usually via XAUTOLOG), Linux will be IPLed from minidisk 100. Otherwise, the user is prompted."]},{"l":"Running The Installation","p":["/dev/dasde as swap","& A VNC server process will be started. You should see the following messages:","& After all steps, you should see messages showing the installation system being loaded. For example:","& At the DASD Disk Management window:","& At the Disk Activation window, click Configure DASD Disks.","& Back in Expert Partitioner, click the plus sign to the left of Volume Management. You should see the new home, system and optvg volume group. & Click on each and the Volume Group window will be displayed, as shown on Figure 10.9. It shows there are no logical volumes defined. Start with home VG and Click Add.","& Click Accept.","& Click Add => Volume Group again. & At the Add Volume Group window, set the volume group name to home. & Click Add after selecting/dev/dasdd1 to the Selected Physical Volumes. Click Finish.","& Click Add => Volume Group again. & At the Add Volume Group window, set the volume group name to system. & Click Add after selecting/dev/dasdc1 to the Selected Physical Volumes. Click Finish.","& Click Add => Volume Group. & At the Add Volume Group window, set the volume group name to optvg. & Click Add after selecting /dev/dasdb1 to the Selected Physical Volumes. Click Finish.","& Create an empty partition /dev/dasdb, /dev/dasdc, /dev/dasdd in the same fashion as you did to create /dev/dasda but (Select /dev/dasdb => Add => Maximum Size => Do not format/Do not mount partition). Accept the default size of all the space. Check figure 10.5","& Double-click the IBM-DASD that corresponds to the 100 minidisk in the Available Storage section. In this example, it is /dev/dasda (about 1GB)& In the Hard Disk: /dev/dasda section, click the Add button to add a partition. & In the Add Partition window on /dev/dasda, set partition size to Maximum Size (1.10GB) and click Next. & On the next screen, accept the defaults (Format partition, Ext3 file system, Mount partition, and a Mount Point of /), as shown in Figure 10.4. Click Finish.","& Enter home as the name for new logical volume and click Next. & On the Add Logical Volume window, click the Maximum Size radio button (452Mb) Click Next. & Accept ext3 as the File System type and the Mount point of/home. Click Finish. & Now click on optvg mount point and create a opt using the Maximum Size of optvg, File System type ext3 and Mount point of /opt. & For system vg you will create 3 Logical Volumes: && tmp - /tmp - 500MB ext3 && usr - /usr - 2GB ext3 && var - /var - the rest (about 1.64GB) ext3","& For /dev/dasde format the partition as Swap. Check figure 10.6","& From this point, the installation process behaves identically to any other architecture.","& If you see a pop-up window stating \"The partitioning on disk X is not readable by the partitioning tool parted...\", click OK","& In the Expert tab, move down to Default Runlevel and choose 3: Full multiuser with network. Click OK. You will receive a VNC warning. Click Yes.","& In the Installation Mode window, accept the default of New installation and click Next. & In the Clock and Time Zone window, select your time settings and click Next. & In the Installation Settings window, click the tab Expert. & In the Installation Settings window, click Partitioning. & In the Preparing Hard Disk window, accept the default of Customer Partitioning (for experts) and click Next. & In the Expert Partitioner window and the System View column on the left, click a plus sign next to Hard Disks to expand a list of all available disks, check figure 10.3 below.","& In the Installation Settings window, select Software. You might see a Disk Space Warning window. If so, click OK. & The Software Selection window opens. Leave Base System, 32-Bit Runtime Environment, Help and Support Documentation, and Minimal System selected. Clear all other setting as shown in Figure 10.12, click OK. Click the disk usage window to update the graphs.","& Logon on LINUX1, answer \"no\" when asked to IPL 100.","& Now /dev/dasdb,c,d can be used to create a volume group. Click Volume Management as shown on Figure 10.7.","& Run the setup REXX (The name of the file may differ depending on the distruibution, ask your instructor).","& Start a VNC viewer session to the installation process.","& The Figure 10.11 shows the dasd configuration for our Linux.","& The Linux boot output will show up and at the end you may see:","& The window Finishing Basic Installation will appear, then the VNC client will end and the system will reboot. Go back to the 3270 console and clear the screen a number of times. & Restart or go back to the same VNC client used for the first part of installation. From a browser either click Login Again or click the browser's refresh button until another VNC login window appears. If you are using a VNC client, open that application again. & Log in using the same VNC password (12345678 in this example). & In the Password for root user window, type the root password twice and click Next. Do not forget this password. & In the Hostname and Domain Name window, both Hostname and Domain Name are entered by the installer as they are specified in LINUX PARM file. In this example, linux1-titog is the host name and workshop.ibm.com is the domain name. Clear the Change Hostname via DHCP check-box. Click Next. & In the Network Configuration window you will see Firewall is enabled, click the word disable to disable it. All other values should be correct; therefore, just click Next. & In the Test Internet Connection window, if you do not have Internet access, select No, skip this test, and click Next. & In the Network Services Configuration window, accept the default and click Next. A certificate will be created. & In the User Authentication Method window, select Local (/etc/passwd) and click Next. & In the New Local User window, add at least one user to have a non-root ID on all cloned systems. When you are done, click Next. & In the Writing the system configuration window the SuSEconfig tool writes all your settings to disk. & The next window will be Release Notes. After reviewing the release notes, click Next. & In the Hardware Configuration window, choose the Skip Configuration radio button and click Next. & The last installation window is Installation Completed. Clear the box Clone This System for AutoYaST2 check box and click Finish.","& You are ready to begin the installation. Click Install.","& You should be prompted for Installation Instructions, these steps are covered in class with your instructor.","& You should see a window entitled Welcome. Select your Language and Keyboard. After reading the License Agreement, click the check-box I Agree to the License Terms, then click Next.","& Your Volume Management screen should be like this:","&& Click Activate on the Perform Action pop-up menu. If the DASDs have not been formatted previously, you will be asked if you want to format them now. Format the DASDs now. This will take a few minutes.","&& Click Next when the formatting is complete.","&& Click Select or Deselect for the two read/write disks (100, 101, 102, 103 and 104).","&& If you want to make sure to get the disks in a certain device order, activate them one by one. The first disk will be /dev/dasda, the second disk will be /dev/dasdb, and so on.","&& In the Disk Activation window, click Next.","&& The DASDs will be activated quickly.","Activate DASDs","Add Partition on /dev/dasda","Add Partition on /dev/dasdb,c,d","Add Volume Group","Check figure 10.10 to see the result:","DASD distribution","Hard Disks","Logical Volume","Logical Volumes configured","Select disks to be used during the installation","Softwares to be installed","The VNC session should end. Return to the 3270 session and you may have to clear the screen a few times. Then, you should see a login prompt. You are done installing Linux! You can disconnect from the 3270 session using the DISCONNECT command:","Volume Groups","You can now access this Linux system using SSH."]},{"l":"Initial configuration"},{"l":"Disable Unneeded Services","p":["In order to keep the golden image as lean as possible in terms of CPU usage, some of these services can be turned off. Turn off the following services by using the following chkconfig commands:"]},{"l":"Install CMSfs","p":["To read CMS files from Linux, the cmsfs RPM is used. The clone script requires it to read parameter files. To add this package to the golden image, use:"]},{"i":"configure-etcinittab","l":"Configure /etc/inittab","p":["Linux reboots when a Ctrl-Alt-Del key sequence is trapped. This key sequence is simulated by z/VM when it issues a SIGNAL SHUTDOWN command. Rather than rebooting, it might be better that your system halts (shuts down).","Change shutdown -r to shutdown -h:","This change will be picked up when the system is rebooted."]},{"i":"sec:configurebootlocal","l":"Configure boot.local","p":["The chshut command is added twice so that the virtual machine is logged off after it is halted or powered off. This will allow for an orderly shutdown of z/VM. To do so, add the following four lines to boot.local:","You can execute /etc/init.d/boot.local to test the new settings:","Your Linux first image is now ready!"]}],[{"i":"cap:clonelinux","l":"Clone Linux","p":["During this chapter we will create our second Linux (LINUX2) using LINUX1 (from the previus chapter) as our golden image."]},{"l":"Before you begin","p":["You need to:","& Be sure that LINUX1 is not running so the new clone can use LINUX1's IP address. You will use LINUX1's IP address temporarily for each Linux clone during the cloning process. Since no two Linux virtual servers can have the same IP address at the same time, you must clone Linux servers one at a time, then customize them. & Have the new IP address for the cloned Linux virtual server. & Log on as MAINT."]},{"l":"Procedure","p":["& As soon as you change the IP address you will lose your SSH connection. Reconnect using your new IP or reboot the server from 3270 console.","& As soon as your clone is complete, log onto LINUX02. The Linux operating system loads.","& Back to \"Overview\" tab, select the network card using \"TAB\" key and press Alt+i to edit it.","& Check that the Linux operating system reboots properly and that the network connections are correct.","& Clone the disks from LINUX1 to the clone LINUX02. From the command line, type these DirMaint commands and press the Enter key after each one:","& Cloning might take time. You are ready to move to the next step after your work units have completed successfully. To determine the status of your work units, type this command and press the Enter key:","& Congratulations, your clone is complete!","& From the command line execute:","& Go to IP Address Field and update it using the new IP","& If something is running you may see a workunit:","& If you received the error above, it is ok. We just need to ensure that the directory is unlocked.","& Otherwise the DATAMOVE queue should be empty:","& Press alt+s to go to \"Hostname/DNS\" tab, update the hostname of the new server and press alt+v to go back to \"Overview\" tab.","& Select Network Devices and Enter on Network Settings","& SSH to the new Linux virtual server and update the network configuration files to make permanent the network changes. You might need to modify the IP address and host name through a tool like yast2.","& Try pinging this Linux server or try to access a remote site from this Linux server.","& Unlock LINUX1's directory entry. From the command line, type this command and press the Enter key:","& You will receive a response like this one for each command:","Assuming that LINUX2 is created in exercise 9.7.1, we will clone all the disks from LINUX1 to LINUX2. We will use DIRMAINT for this activity.","Change your hostname","Complete Environment","dirm for linux2 clonedisk 100 linux1 100","Example:","Hints Notice that the target is \"linux2\" and it is defined before\"linux1\" in the command above.","Select Network Devices and Enter on Network Settings","Select the network card","The command above means: \"For [linux2], in my mdisk[100] clone [linux1] mdisk[100]\"","This is our actual environment after the changes:","Update the IP Address"]}],[{"l":"Basic system automation","p":["It is useful to configure z/VM so that all production Linux systems, or all Linux systems desired to be started, come up when z/VM is IPLed. Contrarily, when z/VM is shut down, it is useful for all Linux systems running to first come down cleanly. z/VM has a facility that allows a privileged user to set a time parameter that defines the amount of time reserved for guests to come down after the z/VM SHUTDOWN command is issued, but before z/VM itself comes down. This value is used as the default timeout interval for SIGNAL, FORCE, and SHUTDOWN commands when no explicit interval is specified. If SET SIGNAL SHUTDOWN is not specified in the system configuration file, the default is 0, which suppresses guest shutdown signals. We have setup the SIGNAL SHUTDOWN to 500 seconds on page ."]},{"i":"autolog-linux-systems-to-boot-at-zvm-ipl","l":"Autolog Linux systems to boot at z/VM IPL","p":["Like we did for TCPIP on section 6.5.6(page ), we will edit the PROFILE EXEC for AUTOLOG1 to include our Linux guests.","Instead of login on AUTOLOG1, we will modify this file from MAINT, linking AUTOLOG1 191 disk.","& Logon as MAINT","& Link to the AUTOLOG1 191 minidisk. Type this command and press the Enter key:","& Access the 091 minidisk as Z. Type this command and press the Enter key:","& Edit AUTOLOG1's PROFILE EXEC.","& Find Customer processing comment:","& Our previous update left this section like this:","& Add your Linux guests LINUX1 and LINUX2:","& Save and quit using file","& Detach the 091 minidisk (AUTOLOG1's 191). Type this command and press the Enter key:","& If you want to test the autolog procedure, shutdown your Linux guests and from the command line type this command and press the Enter key:"]}],[{"l":"System z Device Drivers and Commands","p":["Linux on z System has some special tools used to manage some devices and resources. This package is called s390x tools. You can get more info from http://www.ibm.com/developerworks/linux/linux390/s390-tools.html.","We are going to use some of s390x tools to increase/decrease resources dynamically."]},{"i":"zvm-cp-interface-device-driver-vmcp","l":"z/VM CP interface device driver (vmcp)","p":["Using the z/VM CP interface device driver (vmcp), you can send control program (CP) commands to the VM hypervisor and display VM's response. The vmcp module is loaded during the initialization because we have setup it on boot.local (Section 10.3.4).","Display its status to make sure that the module is loaded correctly.","The vmcp module is now loaded. Test it by using some z/VM CP commands:"]},{"l":"Managing Virtual CPU","p":["In our LINDFLT PROFILE we specified the maximum number of processors allowed for the guest when we applied the following line:","& Check how many CPUs you have for your guest using the command lscpu:","& To change the number of CPUs dinamically you can use the command vmcp def cpu <n> and chcpu:","& The first step is to define you CPU via vmcp:","& The \"cpu 0\" is the base and it is already defined by LINDFLT. Use chcpu -r to rescan your CPUs:","& lscpu should show you 2 CPUs now","& To make your changes permanent you need to add it to LINUX2 directory using DIRM CPU:","& If you want to delete a CPU you can use the DELETE suffix:","& To remove from Linux execute"]},{"l":"Virtual Memory","p":["The amount of memory that z/VM allocates to a VM is defined in the directory statement.","Our LINUX PROTODIR defines our Linux with 1GB of memory","Anyway you are able to query it using the following DIRMAINT command:","To change it to a new value you can use the same command changing the suffix to a new value:","To apply the new changes you need to shutdown your VM guest and reIPL it again using XAUTOLOG:","After the reipl, you can check the new memory amount:"]},{"l":"Defining standby memory","p":["If you want to configure an amount of standby memory for dynamically increase you can add a \"COMMAND\" statement to the directory:","Fill the panel like this:","Adding a COMMAND","The panel above sets 512 MB as default memory value and 512 MB set as a standby.","As you can see there is one memory block that is \"offline\", to enable it use chmem command:","You can disable an amount of memory using \"-d\" option:"]},{"l":"Working with Disks","p":["& Check the size of your new vg:","& Create a new VG:","& Create a partition using fdasd:","& Create the new directory and mount the new LV:","& Create the new LV:","& Enable the new device:","& Format it using ext3:","& From the output above we can see that the new device is dasdf. To format new device use the following commands:","& Lets add a new disk to Linux","& lsdasd command still does not show you the new device","& lsdasd will now show the new device unformatted:","& The first step is to create a PV using our new device:","& The new dasd is now available for LVM. Lets assume that we want to create a new VG called appvg with one logical volume called myapp.","& To activate this new disk at boot time use dasd_configure:","& To make it active during the boot add this line at the end of/etc/fstab","& To update our lsdasd view we will use vmcp command:","Adding a disk to linux","Another useful command is lsdasd:","It shows you the VDEV number and how Linux named it, example, minidisk 100 (this is how z/VM sees it) is /dev/dasda for Linux.","This is useful for disk maintenance and LVM."]},{"i":"exercise-2","l":"Exercise","p":["Try to add a new DASD to your Linux and extend /usr to 2.5G.","Tip: 800 cyl is about 500 MB","Steps:","On z/VM as MAINT: & DIRM FOR LINUX2 AMD","On Linux as root: & vmcp link '* 106 106 mr'","& chccwdev -e 106","& dasdfmt -p -b 4096 -y -f /dev/dasdg","& fdasd -a /dev/dasdg","& dasd_configure 0.0.0106 1","& pvcreate /dev/dasdg1","& vgextend system /dev/dasdg1","& lvextend -L+500M /dev/system/usr","& resize2fs /dev/system/usr","& df -h"]}],[{"l":"Performance Monitoring Tools"},{"i":"the-zvm-performance-toolkit","l":"The z/VM Performance Toolkit","p":["The Performance Toolkit for z/VM is a global performance product that provides real-time monitoring functions and historical performance analysis for multiple z/VM systems (local or remote). In this section you will learn how to enable the Performance Toolkit. You will go over later in the class how to use the Performance Toolkit for understanding basic system performance.","& Open your web browser to the z/VM IP address and port number for Performance Toolkit for VM.","Performance Toolkit","& On the Web Server Login screen, type your user ID and password (maint userid).","Performance Toolkit login","& Click the name of your z/VM host system. You see a screen like the following:","Performance Toolkit z/VM host","Each item show a different perspective of your environment. Try it."]},{"l":"Monitoring Linux"},{"i":"zvm-monitor-stream---appldata-support","l":"z/VM Monitor stream - APPLDATA Support","p":["This exercise describes how to load those components of the support that have been compiled as separate modules and how to set up your VM guest for the APPLDATA record support.","& Login to LINUX1 as root","& Load the data gathering modules:","& APPLDATA monitor records are produced if both a particular data gathering module and the monitoring support in general are switched on. To switch on monitoring, use the echo command to send a non-zero value into the monitoring variables in the /proc/ virtual file system:","& You can set the time that lapse between consecutive data samples. The time you set is measured by the virtual CPU timer. Because the virtual timer slows down as the guest idles, the time sampling interval in real time can be considerably longer than the value you set. The value in/proc/sys/appldata/interval is the sample interval in milliseconds. The default sample interval is 10000 ms.","To read the current value, issue:","& If you want to make this enabled permanently add the commands below to your /etc/init.d/boot.local:","& Now under \"User Data\" section you should be able to see section \"29. Linux systems*\" enabled."]}],[{"l":"Terminal Server using IUCV","p":["Congratulations you have unlocked an extra content! :)","On this chapter we will discuss the use of an IUCV Terminal Server to connect to Linux on z System guests. It will increase the availability by providing emergency access if the network for a system fails.","The terminal server and all target systems run as guests of the same z/VM instance. Terminal server and target systems are connected through the z/VM Inter-User Communication Vehicle (IUCV). From the terminal server, administrators can access terminal devices on target systems without requiring direct TCP/IP connections to the target systems.","You can use a terminal server to achieve these goals:","& Increase availability by providing emergency access to target systems if the primary network for these systems fails.","& Heighten security by separating user networks from administrator networks or by isolating sensitive Linux instances from IP networks.","& Simplify systems administration by providing a central access point to target systems.","Terminal server environment"]},{"l":"Configuring the Server","p":["The first step is to add two new statements to the server Directory. Our server is LINUX1, that way, we will execute the following DIRMAINT commands:","& To allow our Terminal Server to connect on any guest:","& We will limit the number of concurrent IUCV connections to 128. If omitted, the limit defaults to 64, the maximum value for MAXCONN is 65535","& The configuration for the server is complete. Logoff and restart LINUX1:","& Wait for it LOGOFF and then:"]},{"l":"Configuring The Client","p":["& To configure the client we just need one statement:","Tip If you want to set IUCV ALLOW to all your Linux guests set it in LINDFLT:","DIRM FOR LINDFLT IUCV ALLOW","& The configuration for the client is complete. Logoff and restart LINUX2:","& Wait for it LOGOFF and then:","& Login as root in LINUX1","& Execute:","& Press ENTER twice and the login prompt will appear for LINUX2, logon as root and you will connect to LINUX2 via iucv."]},{"l":"Configuring ts-shell for an user","p":["The ts-shell will lock an user to a limited shell that will only be able to connect or list the IUCV clients that it has access."]},{"l":"Creating an user that will be locked in ts-shell","p":["& First lets create a group that will also be allowed to connect to some servers","& Create an user called \"bob\" that will be locked in ts-shell:","& Change its password","& Authorize \"bob\" and its group to connect to LINUX2:","& Enable audit on ts-shell"]},{"l":"Testing ts-shell","p":["& Login as \"bob\" in LINUX1, you will see a prompt like this:","& To connect to LINUX2 type:","& Press ENTER twice"]},{"l":"Checking audit logs","p":["& As root on LINUX1, go to /var/log/ts-shell/bob (There will be a folder for each user)","& List the files there","& Choose one of these files and use \"scriptreplay\" to replay the session:"]}],[{"l":"How to link a disk from another Linux","p":["& To link a disk as Read-write from another server you need to make sure that this server is down. You can check via 3270 or Linux:","& To link the disk we need to know the password of it, if you don't know the password you can check its directory","& Check the \"MULTIPLE\" password and unlock the directory again. If the password is not set, set it.","& You can link the disk using vmcp:","& To check execute:","& As soon as you link the disk, enable it","& Check the dasd name using lsdasd:","& List /mnt","& As you can see all files from \"root\" filesystem of LINUX2 are available, edit whatever you need and to free the disk again follow the steps below:","&& umount the filesystem","&& Deactivate the disk:","&& Detach the disk","& Activate LINUX2 again"]}],[{"l":"References","p":["For more information check above","The Virtualization Cookbook for IBM z/VM 6.3, RHEL 6.4, and SLES 11 SP3 - Link: < http://www.redbooks.ibm.com/abstracts/sg248147.html>[]","Directory Maintenance Facility Commands Reference - Link:< http://publibz.boulder.ibm.com/epubs/pdf/hcsl4c21.pdf>","CP Commands and Utilities Reference - Link:< http://publibz.boulder.ibm.com/epubs/pdf/hcse4c11.pdf>","Getting Started with Linux on System z - Link:< http://publibz.boulder.ibm.com/epubs/pdf/hcsx0c21.pdf>"]}],[{"l":"Portuguese version"}],[{"l":"Ambiente do Workshop"},{"l":"Hardware","p":["A configuração de hardware depende de onde este workshop está sendo realizado. O instrutor abordará isso usando a apresentação."]},{"l":"Sua Máquina Virtual","p":["z/VM de segundo nível no início do workshop","A figura 1.1 representa os recursos do seu z/VM de 2º nível. No final deste workshop, esses recursos serão atribuídos compondo seu ambiente z/VM. Alerta de Spoiler na figura 1.2.","z/VM de segundo nível no final do workshop"]},{"i":"acesse-seu-zvm","l":"Acesse seu z/VM","p":["\"Tab\" para avançar o cursor até a seção \"IPL PARAMETERS\". Digite\"cons=0009\".","** TODO: Review **","A versão do z/VM é 6 Release 3.0, nível de serviço (64 bits).","Agora desconecte-se do 'OPERATOR'.","Agora, digite o seguinte comando para descobrir qual usuário você é.","Attention It is important to disconnect, not log off your system. Logging off from the system is equivalent to turning off the computer, thus crashing your z/VM system.","Clique em \"Parâmetros de Link...\"","Conecte-se ao sistema z/VM de primeiro nível, conhecido como ZVMDEMO.","Depois de configurar o endereço IP, você deve ver a tela de login.","Digite \"go\"","Digite o seguinte comando para descobrir como foi realizada a última IPL.","Digite seu userid e a senha (consulte seu instrutor) e pressione enter para fazer login no sistema (a senha será mostrada em branco).","Digite: \"cold drain noautolog\"","É hora de iniciar seu ambiente z/VM. Executaremos o IPL(Initial Program Load) do seu sistema. Em um ambiente de primeiro nível, isso é feito via HMC (Hardware Management Console), mas estamos em um ambiente restrito (2º nível) e nosso IPL é feito via o z/VM de primeiro nível.","Estas mensagens fornecem algumas informações básicas sobre o seu sistema:","Inicie o cliente TN3270:","Insira o restante dos parâmetros IPL da seguinte forma.","O identificador do sistema é zVM. Ele também é exibido no canto inferior direito do console.","O sistema tem MB de armazenamento (memória) (ID da mensagem HCPIOP952I ou <QUERY STORAGE>).","O usuário OPERATOR está atualmente conectado (Como? Comando <QUERY USERID>).","Obtenha um número de equipe do instrutor:","Preencha o IP primário e marque \"Auto-reconectar\"","Pressione a tecla \"Pause\" sempre que o canto inferior direito do seu console mostrar \"MORE\" ou \"HOLDING\".","Pressione a tecla Enter para continuar","Pressione a tecla Pause para limpar a tela novamente","Pressione a tecla Pause para limpar a tela. Você deverá ver a tela abaixo. Observe que ainda temos um status de More...","Pressione a tecla Pause quando o status do console indicar \"MORE...\"","Pressione enter para aceitar o padrão \"no\"","Quando solicitado a \"Change TOD clock\":","Quando solicitado a continuar com \"COLD start\":","Quando solicitado a fornecer parâmetros de \"start\":","Se necessário, pressione PAUSE BREAK (O status \"MORE...\" no canto inferior direito do console).","Se sua tela mostrar \"HOLDING\" no canto inferior direito, pressione a tecla Pause para limpar a tela. Você deve ver em seguida a tela do Stand Alone Program Loader.","Verifique o exemplo abaixo e pressione a tecla F10 para carregar o sistema z/VM.","Você deve ver a janela de login para o seu sistema z/VM de segundo nível. Esta é a única sessão disponível para os usuários se conectarem. Mais tarde, você ativará o TCP/IP, que permitirá múltiplas conexões ao seu sistema.","Você deve ver em seguida a tela do Stand Alone Program Loader.","Você inicializou com sucesso o z/VM quando receber as seguintes mensagens:"]}],[{"i":"control-program-cp","l":"Control Program (CP)"},{"l":"Introdução","p":["z/VM possui dois componentes principais:","O Programa de Controle (CP) controla a Máquina Real.","O Sistema de Monitor Conversacional (CMS) controla as Máquinas Virtuais.","O CP é às vezes chamado de hipervisor. Ele é a camada entre o hardware e as máquinas virtuais. Cada máquina virtual parece ter seu próprio CPU, armazenamento (memória) e dispositivos. Na realidade, esses itens podem ser:","Reais. Por exemplo, você pode dedicar uma interface de rede real a uma máquina virtual para seu uso exclusivo.","Compartilhados. Por exemplo, o CPU é compartilhado por meio de divisão de tempo e o armazenamento real é compartilhado como armazenamento virtual.","Simulados. Por exemplo, um switch virtual é um switch de rede LAN simulado. CP mapeia transparentemente dispositivos e recursos virtuais para seus equivalentes reais.","Emulados. Por exemplo, discos SCSI emulados FBA. As declarações EDEVICE nos permitem definir dispositivos emulados que representam dispositivos reais para CP. Isso significa dispositivos SCSI.","Os tópicos a seguir explicam como o CP gerencia os recursos do computador para máquinas virtuais."]},{"i":"central-processing-units-cpus","l":"Central processing units (CPUs)","p":["TODO: Review","Um servidor IBM z13 pode ter até 141 processadores.","Um servidor IBM zEnterprise EC12 pode ter até 101 processadores.","z13 pode ter até 80 LPARs, um aumento dos 65 em zEC12.","Uma Partição Lógica agora pode ter até 141 processadores definidos no z13 (101 para zEC12).","Uma LPAR z/VM pode ter até 64 processadores lógicos se o SMT estiver desativado ou 32 processadores lógicos definidos se o SMT estiver ativado.","Processadores virtuais (ou CPUs virtuais) em uma única máquina virtual (arquitetada): 64","No entanto, NVirtual > NLogical geralmente não é prático.","Se capaz de rodar no modo multiprocessador, seu sistema operacional de máquina virtual despacha trabalho em suas CPUs virtuais como se estivesse rodando em hardware real. O CP cuida do despacho de trabalho em suas CPUs virtuais para CPUs reais.","Diretriz: Nunca dê a uma máquina virtual mais CPUs virtuais do que existem CPUs reais.","Geralmente, as máquinas virtuais compartilham todos os CPUs, mas um CPU real pode ser dedicado a uma máquina virtual, o que significa que o CPU é reservado para uso exclusivo dessa máquina virtual. Isso obviamente tem um impacto no desempenho das outras máquinas virtuais no sistema."]},{"l":"Storage","p":["O termo Storage no mainframe é análogo à memória em um computador pessoal. Os comandos do CP se referem à memória como storage, portanto, não confunda o termo \" storage\" com armazenamento em disco ou fita.","Cada máquina virtual tem seu próprio storage virtual. O CP gerencia a residência das páginas da máquina virtual no storage real por meio da paginação. Páginas que não foram referenciadas podem ser movidas do storage real para um dispositivo de paginação. Quando uma máquina virtual requer uma página que não está mais no storage real, ocorre uma falta de página e o CP traz a página faltante de volta para o storage real.","O CP possui facilidades que permitem que partes do storage real sejam compartilhadas por muitas máquinas virtuais. Tais porções são chamadas de segmentos compartilhados. Esse compartilhamento economiza no storage real e requer menos paginação, melhorando assim o desempenho. Por exemplo, o núcleo CMS é compartilhado no storage real por todas as máquinas virtuais que carregaram o CMS pelo nome; ou seja, toda máquina virtual CMS mapeia um segmento de storage virtual de 1 MB para o mesmo 1 MB de storage real."]},{"l":"DASD and minidisks","p":["DASD, o termo de mainframe para drives de disco, significa \"direct access storage device\" e é análogo a um disco rígido em um computador pessoal. Um único DASD real é chamado de volume ou volume real. Cada volume tem uma etiqueta ou número de série de volume (volser) que identifica o volume para o z/VM.","É importante entender a maneira como o z/VM compartilha DASD. O CP pode logicamente particionar volumes DASD reais em minidiscos, que é análogo a dividir um disco rígido de computador pessoal em várias partições. Um minidisco tem sua própria etiqueta, que é distinta da etiqueta DASD real. Cada máquina virtual pode ter um ou mais minidiscos e esses minidiscos estão sob controle do sistema operacional da maquina virtual."]},{"l":"Minidisks Temporários","p":["Você pode criar um minidisco temporário a partir de um pool especial de discos reais. O disco dura enquanto a máquina virtual estiver conectada. Ao desconectar, o minidisco temporário é excluído e o espaço retorna para o pool de disco temporário disponível."]},{"l":"Discos virtuais em storage","p":["Discos virtuais em armazenamento são semelhantes a minidiscos temporários, exceto que os discos são mapeados para o storage em vez de cilindros de discos reais. O uso de discos virtuais em storage evita a necessidade de I/O de disco. O CP gerencia as páginas do disco virtual como parte de sua gestão de memória real."]},{"i":"virtual-readers-punches-e-printers","l":"Virtual readers, punches, e printers","p":["Estes dispositivos não estão associados a dispositivos reais, mas são implementados através do sistema de arquivos de spool.","Nos primeiros dias da computação, a entrada no computador vinha de cartões perfurados carregados em um leitor de cartões ( reader). Você usava uma perfuradora ( keypunch) para registrar seu programa em cartões perfurados, depois carregava os cartões em um leitor de cartões ( reader), que interpretava seus cartões e carregava seu programa no computador. A saída do programa era escrita em uma impressora ( printer). O z/VM preserva esse pedaço da história da computação através de dispositivos virtuais de leitura, perfuração e impressão, também chamados de dispositivos de registro unitário. Os dispositivos de registro unitário oferecem uma maneira prática de enviar arquivos de um dispositivo virtual para outro, para outras máquinas virtuais ou para dispositivos reais (como impressoras reais). Por exemplo, você pode pensar em um arquivo sendo enviado de uma máquina virtual para outra como o equivalente virtual de pegar uma pilha de cartões de um computador e carregá-la no leitor de cartões de outro computador.","Por trás da manipulação desses arquivos, está um sistema de arquivos CP chamado sistema de arquivos de spool. O CP gerencia arquivos de spool em um ou mais volumes DASD que atuam como áreas de armazenamento temporário. Um arquivo de spool é uma coleção de dados juntamente com instruções de controle de dispositivo para processamento em um dispositivo de registro unitário. O spooling é o processamento de arquivos criados por ou destinados a leitores virtuais, perfurações e impressoras. Através de comandos CP e CMS, você pode enviar arquivos de spool de um dispositivo virtual para outro, de sua máquina virtual para outra e para dispositivos reais.","Por convenção, cada máquina virtual tem um leitor virtual ( reader) no número de dispositivo virtual 00C, uma perfuradora virtual ( punch) no número de dispositivo virtual 00D e uma impressora virtual ( printer) no número de dispositivo virtual 00E. Seu leitor virtual é como a caixa de entrada de um sistema de e-mail, exceto que mais do que apenas e-mails podem ser colocados lá. Através de sua perfuradora virtual, você pode colocar uma cópia de um sistema operacional inteiro no spool do sistema, e então usar o comando CP IPL para carregar e executar esse sistema operacional em sua máquina virtual."]},{"l":"O virtual machine console","p":["CP READ","Descrição","Enquanto você trabalha em seu console, o canto inferior direito da tela exibe vários avisos de status. Os avisos informam o que está acontecendo no sistema no momento atual. Se você esquecer o que esses avisos significam, você pode retornar a esta seção para referência.","Este aviso indica que há mais informações do que podem caber na tela atual. Após uma pausa (que depende das configurações do terminal da sua máquina virtual), a próxima tela de informações é exibida. Para ver a próxima tela imediatamente, pressione a tecla Limpar (Clear). Para manter essa informação na tela, pressione a tecla Enter, o que muda MORE... para HOLDING.","Este aviso significa que a máquina virtual está processando algo. No caso do CMS, significa que o CMS está pronto para que você insira um comando.","Este aviso significa que o Programa de Controle (CP) está esperando você inserir um comando.","Este aviso significa que o sistema está esperando que você limpe a tela antes de mostrar mais informações. O aviso aparece quando a tela exibe MORE... e você pressiona a tecla Enter. O aviso também pode aparecer quando outro usuário lhe envia uma mensagem. Para cancelar a retenção, pressione a tecla Clear.","Este aviso significa que o sistema está processando algo e está muito ocupado para aceitar outro comando. Espere alguns segundos e insira seu comando novamente.","Este aviso significa que um sistema operacional de máquina virtual, como o CMS, está esperando você inserir um comando.","HOLDING","MORE...","NOT ACCEPTED","O console da máquina virtual ou console virtual é a interface principal da máquina virtual. Quando você se conecta a uma máquina virtual a partir de um terminal local ou uma estação de trabalho remota, o console virtual é associado à sessão do terminal. A partir do console, você pode inserir comandos CP, como carregar (IPL) um sistema operacional. O console virtual é o dispositivo que um sistema operacional vê como seu sistema ou console de hardware.","RUNNING","Status do Console","VM READ"]},{"l":"O Diretório do Usuário","p":["O diretório do usuário z/VM (ou registro do usuário) descreve a configuração e as características operacionais de cada máquina virtual que pode ser criada pelo CP. Um diretório do usuário z/VM existe em duas formas: uma forma de origem que consiste em um ou mais arquivos CMS, e uma forma de objeto, compilada a partir da origem, em um disco formatado pelo CP.","Cada máquina virtual tem uma entrada no diretório.","User Directory example"]},{"l":"Exercícios"},{"l":"Logon na MAINT","p":["Faça login na máquina virtual MAINT. A senha padrão mudou no z/VM 6.3. Em nosso ambiente, a senha padrão é WD5JU8QP(ou o nome da máquina em alguns casos). Sempre verifique o Guia de Instalação que acompanha seu pedido no IBM Shopz.","Alternativamente, limpe a tela de login e, no modo CP, digite ===> logon maint WD5JU8QP","Pressione a tecla ENTER uma vez para mostrar algumas mensagens do PROFILE EXEC para este userid.","Pressione a tecla ENTER novamente para continuar e alterar o status de \"VM READ\" para o status \"RUNNING\".","O \"PROFILE EXEC\" será executado para configurar seu ambiente. Agora você está no CMS. É semelhante ao TSO no z/OS ou a um shell no Linux. Você aprenderá mais sobre o CMS na próxima seção. Agora, vamos fazer alguns comandos CP para se familiarizar com o sistema."]},{"l":"Comandos CP","p":["Esta seção descreverá alguns comandos CP."]},{"l":"HELP","p":["Você usa os comandos CP para se comunicar com o programa de controle. Os comandos CP controlam os dispositivos conectados a uma máquina virtual e suas características.","1. Para ver uma lista dos comandos CP:","Posicione o cursor em \"CP\"","Pressione a tecla ENTER","O que você vê aqui é um subconjunto dos comandos CP disponíveis no z/VM.","2. Para exibir o texto de ajuda para o comando DISCONNECT:","Pressione F8, se necessário, para avançar a tela.","Posicione o cursor em \"DISConn\"","A parte inferior da tela lista as teclas PF para opções adicionais que estão disponíveis para o comando selecionado.","3. Quando terminar de navegar, saia da utilidade de ajuda.","Pressione a tecla F3 (Sair) repetidamente até retornar ao estado \"RUNNING\"","Você pode ter que fazer isso repetidamente, dependendo de quão aprofundado você foi na função AJUDA.","4. Outra maneira de ir diretamente para o menu de comandos CP é com o seguinte comando de ajuda:","5. Saia do menu de ajuda e retorne ao prompt \"READY\":","Pressione a tecla F3 repetidamente até retornar ao estado \"RUNNING\""]},{"l":"QUERY","p":["0190, 0191, 019D, 019E, 0400, 0401 e 0402","0191","0200","0201, 0205, 0206","0300, 0304","0301, 0302, 0303","1. Para exibir uma lista de comandos que sua máquina virtual (MAINT, neste caso) está autorizada a emitir:","2. Exiba uma lista de todos os processadores reais e indique a maneira como cada processador está sendo utilizado.","2222, 24CC, 2CF0","3. Exiba o tamanho do storage real.","4. Exiba o tamanho do storage acessível à sua máquina virtual (MAINT)","5. Exiba o status dos dispositivos de armazenamento direto real (DASDs).","6. Exibir todos os dispositivos Open System Adapter (OSA) disponíveis.","7. Exiba o número de cilindros ou páginas que estão alocados, em uso, e disponíveis para volumes DASD anexados ao sistema que são propriedade de'CP' (Control Program). Estes são tipicamente DASDs relacionados ao sistema.","A máquina virtual MAINT tem acesso a ______________ MB de storage virtual.","A saída indica que seu sistema z/VM tem ______________ de storage real.","A saída indica que seu z/VM possui ______________ processadores reais. O endereço do processador 00 é o ______________ processador e o endereço do processador 01 é o ______________ .","DASD compartilhado com alguns arquivos importantes usados durante este bootcamp.","DASD para uso z/VM.","Descrição","Description","Device IDs","Discos adicionais de MAINT 1º nível.","Discos CMS usados para suportar seu ID de equipe no primeiro nível z/VM (ZVMDEMO).","Em um exercício posterior, você aprenderá como formatar um volume DASD. Basicamente, um volume deve ser alocado e utilizado das seguintes maneiras:","Espaço permanente do usuário.","Esta lista é longa porque a máquina virtual MAINT possui o mais alto nível de classe de privilégio (A, B, C, D, E, F, G), o que a permite emitir todos os comandos. Normalmente, uma máquina virtual geral deve ter apenas classe geral (G) de privilégio, que só permite que ela emita comandos para controlar seus próprios recursos.","O espaço de paginação no mainframe é semelhante ao swapping no ambiente distribuído. Windows tem arquivos de swap. Linux tem dispositivos de swap ou arquivos de swap. z/VM tem espaço de paginação.","O espaço de spool é onde arquivos de impressão, leitura e perfuração são armazenados.","O output retorna todos os dispositivos OSA livres. Um dispositivo OSA livre é aquele que não está atualmente em uso por um usuário ou pelo sistema.","Outros volumes de propriedade de CP. Por enquanto, considere volumes de propriedade de CP como volumes de sistema, contendo coisas como espaço de página (swap para aqueles que preferem a terminologia distribuída), espaço de spool, espaço temporário de arquivo, etc...","PAGE","PERM","SPOOL","TDISK","Tdisk é uma abreviação de disco temporário. O z/VM oferece a capacidade de definir discos temporários de trabalho ou utilitários.","Tipo","Uma lista de dispositivos conhecidos por esta máquina virtual é exibida. Verifique a tabela abaixo para descrições de cada dispositivo e para que são usados.","Usado para construir máquinas virtuais Linux.","Vamos aprender um pouco sobre o ambiente da sua máquina virtual com o comando QUERY.","Volume de inicialização ou \"res\" pack, às vezes chamado de SYSRES, ou volume de residência do sistema. O volume que você acabou de \"IPL\" (IPL 0200 CLEAR)."]},{"l":"VARY","p":["Com um mainframe, você tem a capacidade de ligar dispositivos e torná-los disponíveis para uso, ou você pode desligá-los e removê-los do pool de recursos disponíveis. Isso é chamado de variar dispositivos online e variar dispositivos off-line.","Em um exercício anterior, você usou o comando 'Q DASD ALL' para exibir o status dos DASDs reais. Como os dispositivos 2222, 24CC e 2CF0 não são necessários para sua máquina virtual de segundo nível, vamos variá-los para offline.","Exiba o status desses dispositivos para verificar se eles estão offline."]},{"l":"ATTACH","p":["Em um exercício anterior, você usou o comando 'Q OSA FREE' para exibir todos os endereços disponíveis do Open Systems Adapter. Você pode 'anexar' um dispositivo livre a uma máquina virtual e disponibilizá-lo para uso. Uma forma de anexar um dispositivo real é usando o comando 'ATTACH'.","Você usará os dispositivos OSA 800-802 neste workshop mais tarde para fornecer rede para o convidado Linux que você irá construir. Vamos anexar esses dispositivos à máquina virtual MAINT agora.","Exiba o status desses dispositivos:","Observe que eles não estão mais livres (Q OSA FREE)! Eles aparecem como anexados ao MAINT. O comando para retornar esses dispositivos ao pool de recursos livres para que outras máquinas virtuais os utilizem é 'DETACH'."]},{"l":"INDICATE","p":["O CP também possui comandos para ajudar você a monitorar o que está acontecendo com o seu sistema; IND ou INDICATE, é um desses comandos. Vamos experimentar alguns:","Este simples comando informa muitas coisas. Você pode perceber de imediato que o seu sistema está \"dormindo\"!","A utilização média é 000","Sem atividades de I/O","Sem paginação (lembre-se de que no z/VM 6.3 a IBM mudou o algoritmo de paginação; talvez às vezes você veja alguma atividade de paginação em um sistema não estressado)","Etc.","Outro comando útil é o 'IND USER'. Você pode usar este comando para descobrir como uma máquina virtual específica está se comportando. Se os campos de contagem de I/O estiverem progredindo, você sabe que a máquina está trabalhando em algo. Esperançosamente, é algo produtivo. Você pode querer tentar alguns comandos IND USER quando o seu convidado Linux estiver rodando mais tarde. (Veja a saída abaixo)","Tente outrass variações..."]},{"l":"CPFMTXA","p":["Quando você adiciona um novo disco a um PC, você pode formatá-lo, particioná-lo e construir sistemas de arquivos. Quando você adiciona um disco a um sistema z/VM, deve formatá-lo e informar ao z/VM como gostaria que o disco fosse usado, por exemplo: Page, Spool, Perm, etc.","CPFMTXA é uma utilidade para formatar e alocar página, spool, disco temporário e espaço de diretório em volumes DASD. Esses volumes especiais estão listados na lista 'CP_OWNED_VOLUMES' do arquivo 'SYSTEM CONFIG'. O z/VM usa volumes nesta lista sempre que precisa alocar espaço de página, spool, temporário e diretório. Além disso, o CPFMTXA pode ser usado para formatar, rotular e alocar volumes DASD para espaço de minidisco de usuário. Esse tipo de alocação é chamado de espaço PERM.","Agora, vamos praticar o uso da utilidade CPFMTXA."]},{"l":"Formatando um dispositivo para PAGE","p":["1. Primeiro, exiba uma lista de DASDs disponíveis:","Agora você terminou com o dispositivo 300. Desanexe-o do MAINT. Digite:","CPFMTXA pergunta em seguida qual dispositivo você gostaria de formatar. Você vai formatar o dispositivo 0300, o dispositivo que você acabou de anexar ao MAINT. Digite:","CPFMTXA pergunta em seguida qual intervalo de cilindros você gostaria de formatar. Esta é uma ótima funcionalidade. Às vezes você não quer formatar todo o volume, apenas intervalos de cilindros selecionados em um volume. Neste caso, você deseja formatar todo o volume, então digite:","Defina a propriedade para o volume:","Digite:","Em seguida, é solicitado um novo rótulo de volume (M01P02 significa volume de paginação). Digite:","Formate o dispositivo 0300 com o utilitário CPFMTXA. Digite:","Neste exemplo, temos o minidisco 551 acessado com a letra E. Se você não tiver este minidisco acessado, digite o seguinte comando e pressione enter:","Note que, por padrão, o CPFMTXA aloca todos os cilindros como espaço PERM. O espaço PERM é onde os minidisks da máquina virtual são alocados, mas nós alteramos esse comportamento em resposta ao \"ENTER ALLOCATION DATA\".","O asterisco significa \"anexar o dispositivo a mim\", o ID do usuário que está emitindo o comando de anexar.","O comando QUERY deve informar que o(s) disco(s) está(ão) livre(s). Anexe o volume ao MAINT. Exemplo: Se o volume estiver no endereço real 300, digite este comando e pressione a tecla Enter:","O CPFMTXA agora invoca o ICKDSF para começar a formatar o volume. Este seria um bom momento para pegar uma xícara de café! Quando a formatação estiver concluída, o CPFMTXA apresenta o seguinte:","O CPFMTXA está reportando o mapa de alocação atual do novo volume M01P02. Como você pode notar, ele está esperando uma entrada sua (instrução VM READ na parte inferior). Em resposta ao prompt \"ENTER ALLOCATION DATA\", digite os seguintes comandos:","O dispositivo 300 deve aparecer como anexado ao MAINT.","O utilitário CPFMTXA perguntará se você deseja formatar, alocar ou etiquetar. CPFMTXA é uma utilidade multifuncional. Neste caso, você deseja começar formatando. Digite:","Ou","Para o nosso exemplo, digite o seguinte e pressione enter:","Para obter acesso à utilidade CPFMTXA, verifique se você tem acesso ao minidisco 551. Na linha de comando, digite o seguinte comando e pressione a tecla Enter:","Para PAGE, SPOOL ou TDISK, precisamos definir um proprietário para o volume, especificando ssiname.sysname.","Regras para propriedade de volumes: Para volumes de usuário que são compartilhados(volumes PERM) em todo o cluster SSI, especifique NOSYS para o sysname (OWNER ssiname.NOSYS). Para volumes de usuário que não são compartilhados(volumes PAGE, SPOOL, TDISK) em todo o cluster SSI, especifique o sysname (OWNER ssiname.sysname).","Somos avisados de que o CPFMTXA está prestes a apagar todos os dados no volume; tem certeza de que deseja continuar?"]},{"i":"sec:formatdisks","l":"Exercício","p":["Utilizando o que você aprendeu no laboratório anterior:","Formate o dispositivo 304 como SPOOL. Por favor, note que para CPFMTXA o nome do tipo é SPOL (apenas 1 \"O\"), não SPOOL. Nomeie-o como M01S02. Não esqueça de configurar a propriedade.","Formate os dispositivos 301, 302 e 303, rotule-os como, por exemplo, LNX301, LNX302 e LNX303 e aloque o dispositivo inteiro com espaço PERM.","Hints Attach the device to MAINT","Format it","Detach the device","Na próxima seção, você aprenderá como adicionar isso ao sistema e tornar a alteração permanente."]},{"l":"Adicionando PAGE ao SYSTEM","p":["Antes de começar você precisa estar logado como MAINT.","Verifique os volumes de paginação no seu Sistema z/VM. Digite o seguinte comando e pressione a tecla Enter:","Defina a propriedade para o volume (se você ainda não o fez). Digite os seguintes comandos e pressione enter:","Digite o seguinte comando para obter o próximo número de slot disponível. Pressione Pausar/Interromper para limpar a tela até ver o slot 255 (o slot de página padrão na instalação). Em nosso sistema, você verá o slot 254 disponível.","Digite o seguinte comando para definir dinamicamente o novo volume de página no slot 254.","Digite o seguinte comando e pressione enter. Agora você anexou um novo volume de página ao seu sistema z/VM.","Digite os seguintes comandos para garantir que o novo volume de página está funcionando em seu sistema z/VM. O novo volume de página deve agora aparecer.","Vamos aprender como adicionar esse volume de página ao arquivo SYSTEM CONFIG na Unidade, ou teremos resultados desagradáveis no próximo IPL do z/VM. (Capítulo 4- explicaremos melhor o SYSTEM CONFIG)."]}],[{"l":"CMS"},{"l":"Introdução","p":["Assim como você pode interagir com Linux ou UNIX® através de um shell bash ou Korn (shell Unix popular), você pode interagir com o z/VM através do CMS. Da mesma forma que um shell, você pode usar o CMS para editar arquivos, executar EXECs (arquivos executáveis semelhantes a scripts) ou programas, modificar o ambiente da máquina virtual, ou modificar o próprio z/VM. O CMS é para o z/VM como um shell é para o Linux ou UNIX."]},{"l":"HELP","p":["O z/VM fornece ajuda online através do sistema de Ajuda do CMS. O comando HELP é como o comando man no Linux. Você pode encontrar descrições completas dos comandos z/VM usando o comando HELP."]},{"l":"Minidisks e modo de acesso CMS","p":["O CMS, como outros sistemas operacionais rodando em uma máquina virtual, pode acessar minidisks para armazenar e recuperar arquivos. Para o CMS, cada minidisk tem um modo de acesso representado por uma letra alfabética que determina como o CMS busca por arquivos. No Linux, variáveis de caminho definindo diretórios determinam a ordem de busca por arquivos. O CMS busca arquivos entre minidisks baseado na ordem alfabética do modo de acesso. Primeiro, o CMS procura no minidisk A, depois no minidisk B, e assim por diante. O minidisk 191 tem um lugar especial no CMS. Um minidisk 191 para um usuário CMS é como o diretório de arquivos principal para um usuário Linux. O CMS sempre tenta acessar o minidisk 191 de um usuário como modo de acesso A. O minidisk 191 do CMS é frequentemente chamado de \"A-disk\"."]},{"l":"Arquivos CMS","p":["Arquivos CMS possuem um nome de arquivo, tipo de arquivo e modo de arquivo. Nomes e tipos de arquivos podem ter até 8 caracteres de comprimento. O modo de arquivo corresponde ao modo de acesso do minidisk. Exemplos:","Por convenção, alguns tipos de arquivos têm significados especiais. Por exemplo, EXEC é o tipo de arquivo para um arquivo que contém declarações executáveis, LISTING é o tipo de arquivo para arquivos de texto e LISTPS é o tipo de arquivo para arquivos PostScript. Para visualizar e manipular arquivos, use o comando FILELIST (ou comando LISTFILE). FILELIST é semelhante ao comando dir no Linux."]},{"l":"PROFILE EXEC","p":["O PROFILE EXEC é um arquivo executável especial análogo ao .profile (ou .bash_profile) no Linux e UNIX. Toda vez que um usuário CMS faz login, o CMS executa o PROFILE EXEC que reside no minidisk 191, modo de arquivo A. Você pode usar o PROFILE EXEC para configurar o ambiente da sua máquina virtual; por exemplo, acessar discos, configurar teclas PF especiais ou até mesmo carregar outro sistema operacional em sua máquina virtual.","Pode haver momentos em que você não deseja que o PROFILE EXEC seja executado ao fazer login. Por exemplo, suponha que seu PROFILE EXEC carrega automaticamente o Linux. Se você acabou de desligar o Linux e deseja iniciar o CMS, mas impedir que o Linux seja carregado novamente, você pode impedir que o CMS execute o PROFILE EXEC emitindo access (noprof. Ao carregar (IPL) o CMS, você vê uma linha identificadora exibida e o CMS pausa com VM READ no canto inferior direito da tela.","Exemplo (fazendo login com o parâmetro NOPROF)"]},{"l":"O editor de arquivos CMS XEDIT","p":["O CMS fornece um editor de arquivos chamado XEDIT, que não é apenas um editor de tela cheia, mas também uma poderosa ferramenta de programação. O XEDIT possui funções semelhantes ao vi no Linux."]},{"l":"Exercícios"},{"i":"help-1","l":"HELP","p":["Faça login como MAINT. Pressione a tecla enter até ver o estado RUNNING no canto inferior direito da tela.","Para ver uma lista dos comandos CMS:","Place cursor on \"CMS\" and press the ENTER key","What you see here is a subset of the CMS commands available in z/VM.","Display helps text for the QUERY command. You may have to scroll down(F8) to find it.","Place cursor on \"Query\" and press the ENTER key","The bottom of the screen lists the PF Keys for additional options that are available for the selected command. To see related information for this command:","Press the F11 key","When you are done browsing, exit the help utility.","Press the F3 key repeatedly until you return to \"RUNNING\" state","Another way to go directly to the menu of CMS commands is with the following help command:","Exit the help facility and return to the READY prompt: Press the F3 key repeatedly until you return to \"RUNNING\" state"]},{"l":"QUERY","p":["The CMS QUERY command is used to display information about your virtual machine. You can get information about:","& The operation of your virtual machine. & The status of your files and file pool directories. & Information about how your virtual machine is set up.","Use the QUERY ACCESSED command to display the status of your accessed disks. Note that the 191 disk is accessed as \"A\".","Use the QUERY IMPCP command to find out the implied CP function setting for your virtual machine.","For the MAINT virtual machine, the IMPCP function is set to","You will learn more about this function in a moment."]},{"l":"ACCESS","p":["The ACCESS command is used to:","& Identify a minidisk to CMS. & Make a list of the files on the specified minidisk or directory available to your virtual machine. & Establish a file mode letter for the files on a minidisk or in a directory.","Use the ACCESS command to access the 191 minidisk as \"Z\".","What happened to the A-disk?","What implications does this change have?","Re-access the 191 minidisk as \"A\". What is the command? ===>"]},{"l":"COPYFILE","p":["The COPYFILE command is used to copy and modify files on CMS minidisks. You can:","& Combine two or more files into a single file. & Copy multiple input files into multiple output files. & Change file characteristics (such as file mode number and record format) and/or modify file contents.","Logon as MAINT Copy the file PROFILE EXEC A to a new file called PROFILE EXECSAVE A.","What do the \"=\" signs mean?"]},{"l":"CP","p":["There are several ways to issue CP commands in CMS depending on the setting of the implied CP (IMPCP) option:","& If IMPCP is set to ON, CMS will try to interpret an \"unknown\" command as a CP command. & If IMPCP is set to OFF, you must precede any CP commands with \"CP\"","Or you can precede any CP command with \"#CP\" to directly send the command to the control program.","Find your current IMPCP option setting:","It should say 'ON'. This is the default. It means if CMS does not recognize a command, it will send to CP for processing. Try a CP command(while you are in CMS):","Sure enough, the command works and you see a list of DASDs currently attached to your virtual machine. Next set the IMPCP option to off:","Try the same CP command:","This time, the command failed. With the IMPCP function turned off, CMS did not redirect the unknown command to CP for processing.","You are currently running in the CMS environment. To enter CP mode, type:","The console status in the lower right hand corner of the screen now indicates \"CP READ\".","To return to CMS, type:","The status in the lower right hand corner of the console returns to\"RUNNING\".","8. Another way to issue CP command is to prefix it with '#CP'. Try this:","9. Reset the IMPCP option back to ON:"]},{"l":"FILELIST","p":["The FILELIST command is used to display a list of information about CMS files residing on accessed disks. In the FILELIST environment, information is displayed under the control of XEDIT. You can use XEDIT subcommands to manipulate the list itself. You can also issue CMS commands against the files directly from the displayed list.","1. Logoff as MAINT","2. Logon as MAINT630","3. Display a list of files on your A-disk."]},{"i":"filel-a","l":"filel * * a","p":["& Log on to MAINT if you are not already. & One default setting that can be dangerous, especially if you use F12 to retrieve commands, is that PF12 is set to the FILE subcommand. Sometimes you might not want to save your changes with the stroke of one key. It is recommended that you set PF12 to the ? subcommand, which has the effect of a retrieve key:","& Save your changes with the FILE subcommand. & Make the modified file available to other virtual machines by copying it to the MAINT 19E disk with file mode suffix 2: && Release the current 19E disk:","&& Access the disk as file mode F:","&& Copy it to the MAINT 19E disk (F) with file mode suffix 2 (because the MAINT 19E disk is commonly accessed with a file mode suffix of 2, files will not be seen by other virtual machines unless they have this file mode suffix):","&& Link to the MAINT 19E disk read/write:","&& Save the CMS named saved segment with the following commands:","1. Edit the \"PROFILE EXEC\" file.","1. Logoff MAINT630 2. Logon as MAINT 3. Start an XEDIT session and create a new file HELLO EXEC A.","10. File your changes and exit the file.","10. Insert a new line:","11. Execute the file again. You have successfully created an executable file to execute commands and output messages!","11. Execute the profile to pick up the changes. You should see a message tell you that the device 192 is attached.","2. Add the following statements (in upper case) after the following line 'ACCESS 551 E':","4. Enter Input mode and press Enter:","5. Input the following text. Refer to the XEDIT quick reference guide if you need help.","6. Return to Edit mode:","7. File your changes and exit the file.","8. An REXX EXEC is similar to a Unix/Linux script. Let's run the exec and see what happens:","9. Now update the HELLO EXEC file:","After:","Before:","Copy the PROFILE EXEC file to PROFILE EXECBKP. Press the TAB key to advance the cursor to the CMD column of the PROFILE EXEC file","Enter the text 'q time'","Exit FILELIST.","Let's create a simple REXX EXEC file with an edit session by using the XEDIT command.","Next, modify the PROFILE EXEC file so that you will gain access to a shared utility disk which contains useful scripts for the workshop.","Press the Enter key twice","SET PF12 ?","SET PF12 FILE","The command can be read as \"copy the current file (/) to a file with the same file name of PROFILE (=), a file type of EXECBKP and the same file mode of A (=)\".","The files are sorted by date and time, newest to oldest.","The same XEDIT PROFILE should now be accessible to all virtual machines in the z/VM system.","The XEDIT command looks for the file XEDIT PROFILE configuration file when it is invoked. Not all CMS virtual machines have a copy of this file, so XEDIT sessions look and behave differently. The MAINT 191 (A) disk has a PROFILE XEDIT so when you are editing files on MAINT, the values in this profile are usually in effect.","To configure the XEDIT profile on the SSI cluster, perform the following steps:","Type \"COPY / = EXECBKP =\" and press the ENTER key","Type an 'i' on the line number 3","Update the FILELIST display and you should see the new copy of the profile."]}],[{"i":"ch:systemconfig","l":"System Configuration","p":["As a system programmer, you should become familiar with the SYSTEM CONFIG file.","The SYSTEM CONFIG file contains the primary system definitions used when CP is booted (IPLed). All of the information needed to configure CP statically comes from this file. In an SSI cluster, all members use the same SYSTEM CONFIG file; however, you can specify that certain configuration statements apply only to specific members by qualifying the statements with a system identifier. This topic has examples of this specifying method.","The SYSTEM CONFIG file resides on a special CMS-formatted minidisk (CF0) belonging to the PMAINT user ID. Minidisks containing such objects are called parm disks because when allocated those disks are given a special record category type called \"PARM\". There can be more than one parm disk allocated in a z/VM system for backup and recovery.","Related information: \"Using Configuration Files\" in z/VM: CP Planning and Administration, SC24-6178-09."]},{"l":"Exercises"},{"l":"System parameter disks","p":["The SYSTEM CONFIG file is located on a system's parameter disk. Before you begin updating the SYSTEM CONFIG file, you must access the parm disk(In this case, the PMAINT's CF0).","MAINT's CF1, and CF3 minidisks are traditionally used as the system's parameter disks. Use the QUERY CPDISK command to query what system parameter disks are in use with your system:","& Logon as MAINT & Enter the following command and press Enter"]},{"l":"Steps for accessing the parm disk and creating a backup for SYSTEM CONFIG","p":["Perform these steps to access the CF0 parm disk:","& Logon as MAINT & Access the parm disk (PMAINT's CF0). Type these commands and press the Enter key after each command:","& As a preferred practice, create a backup of SYSTEM CONFIG:","You know you are done when you have access to the CF0 disk and have created a backup of SYSTEM CONFIG on the parm disk."]},{"l":"Edit the SYSTEM CONFIG file","p":["After you linked in \"Multiple Write Mode\", you can edit the SYSTEM CONFIG file with XEDIT editor.","Before you begin updating the SYSTEM CONFIG file, we will create a small REXX that will automate the access to SYSTEM CONFIG disk. From MAINT use XEDIT to create a new file called GETCF0 EXEC A:","Add the follow content:","Execute a script \"GETCF0\" which will access the parm disk as the \"X\" disk."]},{"l":"Steps for updating the CP-owned volume list","p":["[\"] 0082 CP_Owned Slot 10 M01S01","& Add a User_Volume_Include statement. If you followed the instructions from the last chapter you probably have volumes named LNX301, LNX302 and LNX303, so it makes sense to use LNX* wildcard for our volumes. Example:","& Add additional Page volumes to slots in descending order (slots 254, 253, and so forth).","& Add additional Spool volumes to slots in ascending order (slots 11, 12, and so forth).","& Find the string \"DUMP & SPOOL VOLUMES\". At the XEDIT command line, type this command and press the Enter key:","& Find the string \"User_Volume_List\" in the section titled \"User volumes for local minidisks.\" At the XEDIT command line, type this command and press the Enter key:","& For shared user volumes, update the User_Volume_List statements in the\"Shared User Volumes\" section.","& If not already doing so, you must edit the SYSTEM CONFIG file. Type this command and press the Enter key:","& In the prefix area for the last USER_VOLUME_LIST statement, type \"i2\" and press the Enter key. For instance:","& Include the LNX301, LNX302 and LNX303 volumes on this list (We will use a wildcard LNX*)","& Logon as MAINT & Edit the SYSTEM CONFIG file. Type any of these two commands to get access and edit the file, and press the Enter key:","& Save the file. At the XEDIT command line, type this command and press the Enter key:","& To add the PAGE volume, find the string \"PAGE & TDISK VOLUMES\" (Tip: you may be able to see this section just below the SPOOL section). At the XEDIT command line, type this command and press the Enter key:","& When you finish the User_Volume_List statements, press the Enter key.& Save the file. At the XEDIT command line, type this command and press the Enter key:","00080/**********************************************************************/","00081","00083","00084/**********************************************************************/","Add the Page volume previously formatted (M01P02) above the M01P01 line.","Add the Spool volume previously formatted (M01S02) below the M01S01 line.","Because all minidisks are managed by CP, all volumes that house minidisks must be attached to the z/VM system. CP must control the volumes so it can reorient channel programs initiated by a guest operating system. The guest perceives its disks as starting at cylinder 0, but the true location of the guest's minidisk starts at an offset of real cylinder 0.","Before you begin: You need to format and allocate the user volumes you need. You need to access to the parm disk.","Before you begin: You need to format and allocate your paging, spooling, temporary disk or Perm Volumes. You need to access to the parm disk.","Duplicate the following line:","Duplicating a line on XEDIT To duplicate a line in XEDIT place a double quote (\") in the line number and press enter, example:","Example: If all your Linux user volumes have a volume identifier starting with LNX, you can add this statement:","If a volume is normally attached to the system using a USER_VOLUME_INCLUDE statement, CP does not notify the operator if the volume is not mounted. If a user volume is necessary for normal system operation, specify it with a USER_VOLUME_LIST statement so that the operator is notified during system initialization if the volume is not mounted.","If no user volumes are attached to the system at IPL time, the real devices housing minidisks need to be attached manually. Otherwise, virtual machines will have no disks. To avoid manual attachment, you can tell CP to look for DASD volume labels and attach those devices at IPL time.","Just as there is a list of DASD volumes that CP should automatically attach to the system during IPL for access to CP system areas, there is a list of DASD volumes that CP should automatically attach to the system for user minidisk definitions.","Or","Perform these steps to update the CP-owned volume list:","Perform these steps to update the user volume list:","Question: Is there another way to add those LNX* disks to the User Volume List?","R:","The CP-owned volume list is the place where you specify the labels of paging, spooling, and temporary disk volumes that CP should automatically attach to the system during IPL. These volumes contain the system data for your z/VM system. All other volumes on the system are considered user volumes.","The USER_VOLUME_LIST statement directs CP to attach specific user DASD volumes at z/VM load (IPL) time. The USER_VOLUME_INCLUDE statement allows you to create a general volume identifier and to include all volumes that match the general identifier.","Unless you qualify user volume statements with a system name, the user volumes are attached to all members in the SSI cluster.","You should now see something like the following:","You will see a file like the following:"]},{"l":"Steps for updating the FEATURES statement","p":["The FEATURES statement in SYSTEM CONFIG allows you to modify attributes associated with the running system at IPL time. In this procedure, you will modify some of the features.","& The Auto_Warm_IPL feature causes CP to bypass prompting for start options, provided the previous system shutdown was successful. The feature allows for a fully automated startup of z/VM.","& The Clear_TDisk feature causes CP to erase temporary disks fully(that is, overwrite the entire temporary disk with zeros) after those disks are detached. The feature prevents another user who might define an identically sized temporary disk from accessing data written by the previous user.","& The Retrieve defines the default and maximum number of retrieve buffers allowed per user on your system. Retrieve buffers create a command history, from which users can retrieve commands previously issued. Command retrieval is usually assigned to a program function key such as PF12 (F12). The assignment is through the CP SET command, SET PF12 RETRIEVE. By pressing PF12, a command is retrieved and written back into the command area on the terminal screen. You probably do not need to change these settings.","& The Passwords_on_Cmds feature allows users to use passwords when using the CP AUTOLOG, LINK, or LOGON commands.","& The Disconnect_timeout feature controls whether and when a virtual machine is logged off after it has been forced to disconnect. You will turn this feature off, so that any virtual machine that has been forced to disconnect will not be logged off.","& The ShutdownTime and Signal ShutdownTime features enable a virtual machine to register with CP to receive a shutdown signal when z/VM is shutting down. CP waits to shut itself down until the time interval (in seconds) is exceeded, or all of the virtual machines enabled for the signal shutdown have reported a successful shutdown. Some Linux distributions support this function, which allows Linux to shut down cleanly before z/VM shuts down. []","Note: Unless you qualify the features with a system name, these features will be the same for all members in your SSI cluster.","Procedure: Find the line containing the text \"Features Statement\", it is a section. At the XEDIT command line, type this command and press the Enter key:","You will see something like this:","and we will modify to something like this:","On the next section we will setup the devices to start up online."]},{"l":"Set up control access to devices at startup","p":["Sometimes your z/VM system might have access to devices that you do not want to be varied online during IPL. For instance, the devices might duplicate labels of devices used by your production system, or might be in use by other LPARs or systems. You can specify ranges of devices that z/VM should not vary online during IPL.","Find the section titled \"Status of Devices\". At the XEDIT command line, type this command and press the Enter key:","On the line with the string \"Devices\", type i in the prefix area and press the Enter key:","Type the following line, then press the Enter key:","Type over the device range on the ONLINE_AT_IPL statement with a device range specific for your system.","Add a new ONLINE_AT_IPL statement for each device range. Use the i prefix command to add lines.","The result:"]},{"l":"Set addresses for consoles","p":["During the first IPL of your z/VM system, you needed to specify a load parameter so you could communicate with the Stand-Alone Program Loader(SAPL). The reason is the new z/VM system did not know which device addresses to use to display messages and prompts. The installation system includes default device addresses for use as the system operator console and emergency messages console, but these addresses rarely correspond to your production hardware configuration. So you will not need to use the SAPL each time you IPL z/VM, you need to supply the address of your IPL console and your emergency messages console on the Operator_Consoles statement. During IPL, CP tries each device on the Operator_Consoles statement (from left to right) until it finds an active device. If no devices on the list are active, CP loads a disabled wait state and terminates. The emergency message console is used as an additional console during failures. Define the emergency console with the Emergency_Message_Console statement.","Find the section titled \"Console Definitions\".","Set 0009 as the first device on the Operator_Consoles and the Emergency_Message_Consoles statement. This will tell z/VM to open operator communications with device 0009 which is the device address of the virtual console. This will alleviate the need for passing load parameters at the next boot.","Save all the changes you have made so far and exit the SYSTEM CONFIG file."]},{"l":"Steps for checking the syntax of the SYSTEM CONFIG file","p":["Since the SYSTEM CONFIG file contains very important data, extreme care must be taken to ensure its contents are correct. The system may not start correctly if this file contains errors. Fixing the errors can be cumbersome. z/VM provides a utility, CPSYNTAX, in the 193 minidisk to check the syntax of the SYSTEM CONFIG file.","Procedure","& Logon as MAINT & To gain access to the CPSYNTAX command, access the 193 disk as F. From the command line, type the following command and press the Enter key:","& Run the CPSYNTAX command. From the command line, type this command and press the Enter key:","& Check for a zero return code. If you do not get a zero return code, modify the SYSTEM CONFIG file and rerun the CPSYNTAX utility. Example of a non-zero return code:","& Lets create a FREECF0 EXEC on your MAINT \"A-disk\", it will release the cf0 disk for us on future updates:","& Execute the script \"FREECF0\" to release and detach the parm disk CF0."]},{"i":"restart-zvm-and-verify-changes","l":"Restart z/VM and verify changes","p":["& Check features Use the QUERY RETRIEVE command to display the setting of the retrieve key buffer limits.","& Check offline devices","& Check paging and spooling space","& Check the system identifier Use the IDENTIFY command to display information about your user ID and node","& Check the user volume list","& Shutdown and IPL your z/VM","A maximum of 99 commands can now be stored and retrieved from the retrieve key buffer. The retrieve keys (PF11 and PF12) are defined in the PROFILE EXEC file.","Display the allocation information for paging space.","Display the allocation information for spooling space.","Environment with extra PAGE and SPOOL","If you added another disk for spool, the output should show that the system now have two spool volumes.","In this exercise, you will learn to use some new CP/CMS commands to verify the changes you have made to the system.","Log on as MAINT (password WD5JU8QP)","Once again, use the QUERY DASD command to display any offline devices.","Press the Enter Key to go from \"VM READ\" to \"RUNNING\" State.","Press the Pause key if the console status is \"MORE...\"","The output should show that the system now have two paging volumes.","This is our actual environment after the changes:","To get a z/VM logo, press the Enter key.","Use the QUERY ALLOC to display the number of cylinders or pages that are allocated, in use, and available for DASD volumes attached to the system.","Use the QUERY DASD command to display a list of the DASDs that are attached to the system.","When the system shuts down and re-IPLs, you will see a number of IPL messages. z/VM restores the system to the same state as it was prior to shutdown (for instance, with OPERATOR disconnected).","Your system identifier should be ZVMWSxx. The system identifier is also displayed at the lower right hand corner of your console."]}],[{"l":"Network Concepts","p":["The physical network in System z consists of devices known as Open Systems Adapters (OSAs). Several varieties are available, such as the OSA-Express4S and OSA-Express5S. These are capable of handling up to 640 TCP/IP stacks simultaneously, including HiperSockets for inter-LPAR communication. An IBM System zEC12 provides up to 96 OSA-Express5S ports for external network communications. The Open Systems Adapter supports both copper and fiber Ethernet connections at speeds of up to 10 Gb.","As might be expected, the z/VM feature to access the Internet Protocol network is TCP/IP for z/VM. OSA-Express devices can be virtualized through a virtual switch (VSWITCH) device to many Linux guests. It is available using special z/VM machines known as VSWITCH controllers. Each Linux guest connects using a virtual device controlled by the qeth module to a virtual switch system in a z/VM LPAR.","An important benefit of the VSWITCH system is that it can be set up with redundant OSA devices that provide a failover network system on z/VM","HiperSockets provide high-speed interconnectivity among guests running on a System z. This technology does not require any special physical device configurations or cabling. The guests simply communicate with one anot her internally via the in-memory capabilities of the PR/SM hypervisor. HiperSockets, however, are not intended to be used for sophisticated networking and should not be used for external traffic.","Both OSA-Express and HiperSockets use the Queue Direct I/O (QDIO) mechanism to transfer data. This mechanism improves the response time using system memory queues to manage the data queue and transfer between z/VM and the network device"]},{"l":"Network Facilities","p":["On the Mainframe, quite a number of different network devices are available for use. Many of these come from a historical background, and should not be used for new implementations. They commonly stay, however, to continue the support of previous installations on newer hardware. Linux on System z can operate using all common network interfaces but for new installations, there are recommended methods for operation depending on the use case.","The following are some technologies that you will find in the System z wo rld that are not used or even seen on x86 systems. This section clarifies some new facilities that you are going to find when you are migrating from x86 to System z. We provide some brief information that you can use to start your network planning. In each subsection, you can find a reference for more detailed information."]},{"i":"the-open-systems-adapter-osa","l":"The Open Systems Adapter (OSA)","p":["The Open Systems Adapter (OSA) is a hardware network controller. It is installed in a Mainframe I/O cage and provides connectivity to clients on local area networks (LANs) or wide area networks (WANs). It ca n be directly attached on Linux but will typically be attached to virtual switches (read more in the \"Virtual switch\" section below). You can find more technical information about OSA cards on IBM zEnterprise EC12 Technical Guide, SG24-8049."]},{"l":"OSA with Link Agregation","p":["You can aggregate multiple physical OSA cards in to a single logical link, which is called a link aggregation group (LAG). This configuration increases the bandwidth and provides nondisruptive failover. How to co nfigure it is well described on Advanced Networking Concepts Applied Using Linux on IBM System z, SG24-7995."]},{"l":"HiperSockets","p":["HiperSockets is a microcode implementation that emulates a Logical Link Control Layer of an OSA interface. HiperSockets provides near zero latency at memory speed communications between servers running in different LPARs. When connecting a Linux guest to an IBM z/OS system on the Mainframe, the HiperSockets network in Layer 3 mode is the method to use. HiperSockets must be configured in the I/O configuration of the Mainframe. HiperSockets do not provide external connections. If an external connection is required, either a HiperSockets bridge must be implemented by using a VSWITCH, or a Linux guest must be set up as a router.","HiperSockets provide a very fast connection between LPARs. They provide an easy way to connect many Linux servers to a z/OS system in the same Mainframe. This direct connection without involving real hardware is an important factor to simplify setups with many Linux systems that must be connected to z/OS. Some benefits are explained in Set up Linux on IBM System z for Production, SG24-8137."]},{"l":"Virtual Switch","p":["A virtual switch (VSWITCH) is a software program that enables one virtual host to communicate with another virtual host within a computer system. Virtual switches typically emulate functions of a physical Ethernet switch. In Linux on System z, a VSWITCH provides direct attachment of z/VM guests to the local physical network segment. The VSWITCH allows IP network architects and network administrators to treat z/VM guests as a server in the network.","The switched network inside a z/VM Operating System commonly is implemented with a VSWITCH. When running the VSWITCH as Layer 2, it behaves similar to a real switch just between virtual machines.","The actual speed of a connection with a VSWITCH depends on a number of different variables. The type of traffic is as important as the real underlying hardware and the maximum transmission unit (MTU), which is the maximum size (in bytes) of one packet of data that can be transferred in a network. Common to all of those solutions is that the VSWITCH is faster than a real switch connected to the Mainframe would be.","VSWITCHes do not need a connection to an OSA card to operate. They can also provide purely virtual networks. This also simplifies the setup of private interconnects between guest systems. When creating private interconnects in an SSI with LGR enabled, the use of dedicated VLANs with external interface is recommended. This is necessary to accomplish the private connection between guests that run on different nodes in the SSI.","Implementing VLANs also helps if different guests run in different security zones of a network. It is easy to configure network interfaces to Linux guests that provide only selected VLANs to the guest. These can be configured either as tagged VLANs or as single untagged VLAN on an interface.","The VSWITCH infrastructure provides two basic configuration options. One configures user-based access, the other configures port-based access. From the possibilities, both are equivalent, just the configurations differs.","You can read more about VSWITCH benefits on Set up Linux on IBM System z for Production, SG24-8137, and technical information about Advanced Networking Concepts Applied Using Linux on IBM System z, SG24-7995."]}],[{"i":"basic-tcpip-configuration","l":"Basic TCP/IP Configuration"},{"l":"TCPIP Service Machines","p":["This section describes the virtual machines that are necessary to provide basic and optional TCP/IP services. The virtual machines listed here comprise a set of \"default\" TCP/IP virtual machines that are defined as part of the z/VM system when it is installed.","While various TCP/IP virtual machines have specific definition requirements, all TCP/IP servers must maintain links to the following minidisks, to allow for correct operation:","Minidisk Description"]},{"l":"Required Virtual Machines","p":["The following virtual machines are required to provide basic TCP/IP services:","Machine Function"]},{"l":"Optional Virtual Machines","p":["There are many optional virtual machines that you can setup to perform TCP/IP server functions. Some of these servers include FTPSERVE, IMAP, PORTMAP, NAMESRV, SSLSERV, SMTP, etc."]},{"l":"Configuration files","p":["This section lists the various TCP/IP configuration files which are necessary to provide basic TCP/IP services for most environments.","The first file, IBM DTCPARMS, contains server configuration definitions. The next three files, PROFILE TCPIP, HOSTS LOCAL, and ETC HOSTS, are configuration files for the TCPIP server virtual machine. The next two files, TCPIP DATA and ETC SERVICES, need to be accessible to all TCP/IP servers, applications, and users; these files contain information that is (or may be) referenced by all users. ETC GATEWAYS contains routing information for distant networks and hosts."]},{"l":"The DTCPARMS files","p":["Configuration of each server is controlled by a set of files with a file type of DTCPARMS. These files may contain two types of information:","& Server class names that define the application protocols available for all server virtual machines. & Individual server user IDs and their associated server class, as well as the operational characteristics of the server (security, devices, parameters, etc.).","The TCP/IP server initialization program searches for server definitions in a hierarchical fashion. The following table lists the DTCPARMS files in the order that they are searched, along with a description of each file.","File Purpose"]},{"l":"The TCPIP DATA File","p":["The TCPIP DATA file defines system parameters used by TCP/IP client applications. It is used to specify configuration information for single or multiple host systems. It also allows you to specify:","& Host name of the VM host & User ID of the TCPIP virtual machine & Domain origin of the host & Output trace & Name server specifications","A sample TCP/IP DATA file is shipped as TCPIP SDATA on the TCPMAINT 592 disk."]},{"l":"The ETC HOSTS Files","p":["The local host files contain information needed for local host name resolution. Any domain name or IP address specified in this file is accessible for use on your network. Local host files are used to create the site table, which enables name resolution and reverse name resolution without using a domain name server.","TCP/IP for z/VM offers two local host files for domain name resolution and reverse name resolution. The old HOSTS LOCAL file (which supports IPv4 only), and the preferred ETC HOSTS file (which supports both IPv4 and IPv6).","The ETC HOSTS file does not require additional processing to create the site tables used for name resolution. The site tables are created dynamically by the resolver when the ETC HOSTS file is used. Use of the HOSTS LOCAL file requires that you run the MAKESITE command to create the site tables. Whenever changes are made to the HOSTS LOCAL file, you must run the MAKESITE command to recreate the site tables.","A sample file, ETCHOSTS SAMPLE, is supplied with the TCP/IP distribution tapes on the."]},{"l":"The TCPIP server profile file","p":["When the TCPIP virtual machine is started, TCP/IP operation and configuration parameters are read from an initial configuration file. TCP/IP searches for an initial configuration file in the following order and uses the first file present in that order:","& userid TCPIP, where userid is the user ID of the of the TCP/IP server& node_name TCPIP, where node_name is the system node name returned by the CMS IDENTIFY command & PROFILE TCPIP","This file is used to customize your system, specify system operation, Telnet, and network parameters. If no file is found, TCP/IP uses server default values.","A sample initial configuration file is provided as PROFILE STCPIP on the TCPMAINT 591 disk."]},{"l":"Exercises"},{"l":"IPWIZARD","p":["You can initially configure TCP/IP via the IPWIZARD command which is generally used just once. After IPWIZARD creates the initial configuration files, they are typically maintained manually.","& Log on as MAINT. & The IPWIZARD command is on the MAINT 193 disk. Issue the ACCESS command so you will pick up IPWIZARD from that minidisk.","& Invoke the IPWIZARD.","& At the '*** z/VM TCP/IP Configuration Wizard ***' panel. Fill in the following data:","& Continue with next step.","Press the F8 key","& At the '*** General Interface Configuration Panel ***' panel. Fill in the following data:","Press the PF8 key","& At the '*** QDIO Interface Configuration Panel ***' panel. Fill in the following data:","& Start the network configuration.","Press the PF5 key to Process","& The TCP/IP stack (TCPIP) must be restarted as part of this procedure. Would you like to restart TCPIP and continue?","Enter '1' for Yes","& The TCP/IP configuration is complete when you see these messages:","& At this point, your z/VM system should be on the network. Go to a DOS prompt (or Linux session) and try to ping your z/VM system."]},{"i":"viewing-tcpip-configuration-files","l":"Viewing TCP/IP configuration files","p":["Let's learn what the IPWIZARD did for you.","& Logon to the TCPMAINT virtual machine","Logoff of MAINT","Logon to TCPMAINT","& List the CMS disks that are accessed via the QUERY DISK command. Note that the TCPMAINT 198 disk is accessed as your disk:","& This is an important disk for TCP/IP configuration files. List all the files on this disk. What is the command?","===>"]},{"l":"PROFILE TCPIP","p":["& Look at the file PROFILE TCPIP. You can type an X, which is a synonym for X EDIT right in the FILELIST command next to the file you want to edit. & Search for the string DEVICE. You should see many of the values that you typed into the IPWIZARD. Following is an example file for ZVMWSXX:","& Exit this file, enter:"]},{"l":"SYSTEM DTCPARMS","p":["& Now look at the file SYSTEM DTCPARMS. & You should see the following:","This file is how the OSA devices 800, 801 and 802 are attached to the TCPIP service machine.","& Exit this file:","Press the F3 key (or type qq)","& If you are still in FILELIST mode, exit and return to RUNNING mode.","Press the F3 key"]},{"l":"Renaming the PROFILE TCPIP file","p":["One change that is recommended is to rename your main configuration file, PROFILE TCPIP. It is possible that applying service to z/VM can overwrite the PROFILE TCPIP file.","& Use the RENAME command to change the file:","& Now you should test this change. You can do this by forcing the TCPIP user ID off the system (logging it off) and then logging on interactively and watching it come back up. This is analogous to a Linux\"service network restart\" command. Be careful when you do this. If you are using the network to get to your system, you will immediately lose the connection.","& Now logon to TCPIP and start the TCP/IP stack.","Press Enter to run the PROFILE EXEC","Press Enter again to start the TCP/IP stack. Note that your renamed profile is used:","& Now should you LOGOFF of TCPIP or DISCONNECT?","===>","The former will kill the stack while the latter will allow it to run. A VM service machine is analogous to a Linux daemon. Use the #CP DISC command. The #CP punches through to the CP level."]},{"l":"Verify the TCPIP setup","p":["If all went well, your z/VM should now be on the network. Let's try a few things to verify the configuration is correct.","& Start a TN3270 session and connect directly to you z/VM system. You now have the ability to log on to more than one virtual machine at a time. & Log on as TCPMAINT. & Use the NETSTAT command to display information about your network. Display the device information. You should see information about the QDIO1 device.","Display the gateway information. You should see information about the gateway.","& Ping the gateway (first hop).","& Tracing routes through a network is sometimes necessary to help debug connectivity issues. Try the TRACERTE command and trace the route to another IP:","& Log off the TCPMAINT virtual machine."]},{"l":"Create a ETC HOSTS file","p":["The local host files contain information needed for local host name resolution. Any domain name or IP address specified in this file is accessible for use on your network. Local host files are used to create the site table, which enables name resolution and reverse name resolution without using a domain name server.","A sample file, ETCHOSTS SAMPLE, is supplied with the z/VM system deliverable on the TCPMAINT 592 disk. You can use this file as a guide for creating a customized ETC HOSTS file, that should reside on this same minidisk (TCPMAINT 592). Because each site is unique, the statements within the ETC HOSTS file must be customized for your installation.","& Log on as TCPMAINT.","& Identify disk 592 file mode","& Copy the sample file from disk 592 to ETC HOSTS","& Edit the file and add the IP from another student","& Test it pinging the z/VM using its name:"]},{"i":"sec:autologtcpip","l":"Configure AUTOLOG1's PROFILE EXEC","p":["When z/VM IPLs, normally the AUTOLOG1 virtual machine is logged on(unless the NOAUTOLOG parameter is specified at IPL). Its PROFILE EXEC is run when CMS IPLs. Using this file, perform the following tasks:","& Limit minidisk cache in main storage and turn it off in expanded storage with the SET MDC command. & Start virtual machines that should be started using the XAUTOLOG command","& Log on to AUTOLOG1.","& Before pressing Enter at the VM READ prompt, type acc (noprof so that the PROFILE EXEC is not run:","& Make a copy of the original PROFILE EXEC","Edit the PROFILE EXEC and add the following three lines below the Customer processing comment:","& The TCPIP VM should start automatically during the IPL.","This is our actual environment after the changes:","Environment with TCPIP"]}],[{"l":"Virtual Switch"},{"i":"setting-up-a-virtual-switch-vswitch-with-failover","l":"Setting up a virtual switch (VSWITCH) with failover","p":["In this exercise, we will setup the Virtual Switch to use two controllers and two separate sets of OSA devices. If the primary controller fails, the backup controller will take over. Likewise, if the primary OSA fails, traffic will be switched to use the backup OSA devices.","The high-level steps in the process are in the sections that follow:","& Define a VSWITCH & Shutdown and re-IPL z/VM","Define the Virtual Switch in the SYSTEM CONFIG file to ensure the Virtual Switch is defined on IPL. Use the MODIFY VSWITCH statement to authorize a z/VM user to attach to the Virtual Switch.","& Log on as MAINT. & Display a list of available OSA devices. You should see devices 803-805 and 806-808 free.","Now you can execute the GETCF0 script to get write access to the primary parm disk.","& Edit the SYSTEM CONFIG file.","& Add the following statements to the end of the file to:","(Change the X in macprefix to your student number)","& Save the changes end exit the file.","& Check the syntax by using the CPSYNTAX command.","& Execute the script to release write access to the primary parm disk."]},{"l":"Test VSWITCH configuration","p":["Restart the z/VM system and verify the changes you have made in the networking section.","& Shutdown and re-ipl your z/VM system.","& Log on as MAINT.","& Display the VSWITCH:","Is the VSWITCH VSW1 defined?","& To see the status of the VSWITCH controllers, issue the command:","Which controller is your primary?","If any of the above commands indicated you have problems in your setup, review your work and try again. You will test the failover capability of the VSWITCH in a later exercise.","This is our actual environment after the changes:","Environment with TCPIP and VSWITCH"]}],[{"i":"cap:DIRMAINT","l":"Directory Maintanace","p":["Before create our first virtual machine (VM), we are going to learn about DIRMAINT."]},{"l":"DIRMAINT","p":["IBM Directory Maintenance z/VM (DirMaint) is a Conversational Monitor System (CMS) application that helps you manage your VM directory. Directory management is simplified by DirMaint's command interface and automated facilities. DirMaint's directory statement-like commands are used to add, delete or alter the directory. DirMaint's error checking ensures that only valid changes are made to the directory, and that only authorized personnel are able to make the requested changes. Any transaction requiring the allocation or deallocation of minidisk extents can be handled automatically. All user-initiated transactions are password controlled, and are recorded for auditing purposes.","Features:","& Automated control of the z/VM user directory through a command interface & Auditing and controls for access to the directory & Error checking & Automated facilities for minidisk allocation, deallocation, and copying. & The ability to work in conjunction with external security managers, such as RACF.","There are individual Dirmaint commands for each directory statement.","The general format of a DirMaint command is:","Where:","DIRMaint is the name of the DirMaint EXEC.","prefix is an optional command prefix keyword and any operands required for that keyword.","command is the DirMaint command.","cmd_options are any options to be passed to command.","Example:","The DirMaint command provides the interface between the command issuer and the DirMaint service machine. The issuer types the DirMaint command followed by a command operand. The DirMaint command routes the command to the DirMaint service machine where the service machine does validation checking, and either processes the request or rejects it with an appropriate message. The request sent to the service machine may include prefix keywords.","The DirMaint command may be abbreviated to DIRM."]},{"l":"Extent control","p":["The EXTENT CONTROL file defines any volume that is being used for minidisk allocation and provides a template, or layout, of how the space should be used. In addition, it also contains system and device default values used during allocation operations.","This file can be updated dynamically with the DIRM DASD command.","To check how the EXTENT CONTROL file looks like you can use:","Receive the file and check the content:","You will see something like this file:","Each section has a special function:","& REGIONS: Defines an area or region on your DASD volume for use during DirMaint automatic allocation. & GROUPS: Defines a grouping of regions for use during DirMaint automatic allocation. & EXCLUDE: Defines users or user/device combinations that should be considered as excluded by the DirMaint DASD subsystem. & AUTOBLOCK: Defines blocking factors and device architectures for various device types. These supplement or override the IBM supplied definitions in the AUTOBLK DATADVH file. & DEFAULTS: Defines the default maximum size for various DASD devices. These supplement or override the IBM supplied definitions in the DEFAULT DATADVH file. & END: Defines the ending tag for all sections.","We are not going to edit this file manually, we are going to use DIRMAINT commands to avoid errors and typos. You can close the file using \"QQUIT\"."]},{"l":"Adding disks to Extent control","p":["Assuming that you have executed 2.11.6.2, you have disks 301, 302 and 303 formatted as PERM. These 3 disks will be used to create our VMs, but first we need to assign them to DIRMAINT. We are going to create REGIONS (using all cylinders available) and POOLs of disks. We are going to use the label of each disk as the name of the REGION, ex: LNX301, LNX302 and LNX303.","The DIRMAINT command that add disks to EXTENT CONTROL is:","If you type DIRM DASD logged as maint the following panel will open for you:","We will assign DASD 301 (LNX301) to the new region LNX301. The panel below is an example:","Device Types You need to ask the instructor what is the device type for your PERM disks. The example below uses 3390-09, but there are others like 3390-03 and 3390-27.","When you get it filled as needed press F5 to submit your request or F3 to cancel it.","The same result above could be accomplished using the following command line (to avoid the panel):","To apply the changes to EXTENT CONTROL:","If you need to query information about a specific region you can execute:","It will provide, depending the disk type, the following output:","If the REGION is not valid, the following output will appear:"]},{"l":"Exercise","p":["& Add LNX302 and LNX303 to EXTENT CONTROL using DIRM DASD command. && Add LNX302 using the panel && Add LNX303 using the command line && Check both using DIRM DASD QUERY command. && Apply the changes using DIRM RLDE"]},{"l":"Creating a pool of disks","p":["We have assigned LNX301, LNX302 and LNX303 to DIRMAINT. This setup allow us to assing disks to a VM using the REGION name, but we didn't group them yet. These groups of disks are called POOLs, and it is another abstraction that can be used to assign disks to a VM.","Using the same DIRM DASD panel we can create our new POOL, lets call it\"LINUX\":","When you get it filled as needed press F5 to submit your request or F3 to cancel it.","The same result above could be accomplished using the following command line (to avoid the panel):","To apply the changes to EXTENT CONTROL:","You can query your new group information using the following commad:","It will provide the following output:","Our Environment with DIRMAINT"]}],[{"l":"Creating a Virtual Machine","p":["The z/VM user directory specifies the configuration and operating characteristics of virtual machines. A z/VM user directory exists in two forms: a source form that consists of one or more CMS files, and an object form, created from the source, on a CP-formatted disk. Each virtual machine has a directory entry. Here is a sample directory entry:","User Directory example","The sample on figure 9.1 is a simple Linux guest. This chapter will guide you to build a more complex guest using other directory statements like PROFILE and DIRMAINT as a tool to manage those entries.","An entry begins with one of the following statements: GLOBALDEFS (global definitions entry), PROFILE (profile entry), USER (user entry), IDENTITY(identity entry), or SUBCONFIG (subconfiguration entry). For our workshop the most important entries are PROFILE and USER, anyway the others entries are also explained."]},{"l":"DIRECTORY definition","p":["The DIRECTORY Definition consists of one or more DIRECTORY control statements that define the output of object directories. The DIRECTORY statement defines to CP the device on which you have allocated space for the directory. (These devices must also be a CP_owned volume). The user directory itself is managed by DIRMAINT.","The following DIRECTORY definition simply says DASD volume M01RES has directory space allocated on it for the object directory. It is a 3390 device type, and 123 is the virtual device number which contains the directory.","You can query DIRECTORY definitions info executing:"]},{"l":"GLOBAL definition","p":["The Global Definition section begins with the GLOBALDEFS directory control statement. It also includes directory control statements that define global settings to be used across all user definitions. This is an optional statement. If specified it must directly precede all PROFILE and USER definitions. There can be only one GLOBALDEFS directory control statement specified. The user directory that came with the installed system contains the following Globaldefs:"]},{"l":"PROFILE definitions","p":["Each PROFILE definition begins with a PROFILE directory control statement and consolidates other directory control statements that are commonly used across multiple users. When PROFILE is specified it must follow the last DIRECTORY statement, the global definition section (if any), and precede the USER statements.","This is an example of profile:"]},{"l":"USER definitions","p":["User definitions (virtual machine definitions or guests) begin with a USER directory control statement and define an individual virtual machine.","The USER statement starts each virtual machine's directory entry. It also defines a user ID and password, a logon and maximum virtual storage size, and command privileges.","Here is one example of user definitions, in this case the PMAINT user:","The above directory control statement defines a virtual machine called PMAINT, whose password is 'WD5JU8QP'. When PMAINT logs on it is allocated 128 Megabytes of virtual storage. It is allowed a maximum of 1000 Megabytes of virtual storage, and it is a class G, or general user.","The following table contains a description of different command classes:","Class User and Function","Privilege Classes"]},{"l":"Creating a simple CMS user","p":["This section will provide you instruction to create a CMS VM. In the first step we will not even have disks on this VM and we will learn how to add minidisks and how to resize it. This machine will be used to host some files that will be used on next chapter( 10- )."]},{"l":"How to create a new VM","p":["Our objective is to create a new VM called VMTOOLS. There is a special file type called DIRECT. We are going to create a new file called VMTOOLS DIRECT that will host the directory statements needed to run our CMS VM.","& Logged as MAINT","& Create a file called VMTOOLS DIRECT","& Input the following content:","The blue line defines the name, password, amount of memory and privilege class of our new VM","The green lines are related to CMS. We are linking disks that are required to IPL CMS in our VM","The red lines are related to some standard devices, like Reader, Punch, Printer and Console.","& Save the file and quit","& To add our new VM to the directory we are going to use DIRM ADD command:","& If you got RC = 0, we are good, otherwise there is a typo in your VMTOOLS DIRECT file, fix the error and try again."]},{"l":"How to add a minidisk","p":["& Try to login in your new VM and you will see a message:","& Ops! We don't have an \"A-disk\" to our VM... we need to create it.","& Logoff from VMTOOLS","& Logon on MAINT","& Execute:","& It will show a PANEL that need to be filled like this one (The passwords are in blank but you can set as: READ WRITE MULTI):","DASD AMD","& We are creating a new minidisk 191, from our LINUX GROUP, with 5 cylinders. The label is VMT191.","& The expected result is:","DASD AMD result","& If you want to check how different is your VMTOOLS directory execute:","& RECEIVE <n> (REP","Where <n> is the reader id that will show at the begging of the response.","Reader ID","& You can open using XEDIT and you will see the new MDISK statement at the bottom"]},{"l":"How to change minidisk size","p":["& Execute","& DIRM FOR VMTOOLS CMD will open a panel","& We are going to increase the size of 191 minidisk from 5 cyl to 10 cyl","& Follow the panel:","DASD CMD","& Press F5 to submit."]},{"i":"exercise-1","l":"Exercise","p":["Add a new minidisk:","& Address: 192 & Device type: 3390 & On AUTOG: && Size: 300 && Grpname: LINUX & Link Mode: MR & Label: LNX192 & Passwords: && READ WRITE MULTI"]},{"l":"FTP files to VMTOOLS 192","p":["During the class the instruction will teach you how to FTP files to our new minidisk 192. These files are essential to the Linux installation. These steps are not documented here because it depends on your environment.","These instructions are present in the slide deck."]},{"l":"Creating our Linux Profile","p":["On this section a profile to be included by Linux virtual machines will be created.","& Log on as MAINT. & Create the user directory source file.","& In XEDIT tipe \"INPUT\" to enable input mode","& Paste de following content","& Hit ENTER two times to exit input mode.","Explanation","& PROFILE LINDFLT - Define the profile named LINDFLT & COMMAND CP SET PF12 RETRIEVE - Enable F12 to retrieve commands & COMMAND CP SET PF11 RETRIEVE FORWARD - Enable F11 to & COMMAND SET VSWITCH VSW1 GRANT&USERID - Grant access to VSW1 & COMMAND DEFINE NIC 600 TYPE QDIO - Define a network card on vaddr 600 & COMMAND COUPLE 600 TO SYSTEM VSW1 - Couple the NIC to VSW1 & IPL CMS - When the user ID is logged on, IPL CMS & MACH ESA 2 -The machine architecture is ESA with a maximum of 4 CPUs. & OPTION APPLMON - To enable Linux guest for data gathering & CPU 00 BASE - CPU 00 is the base and the only CPU set for now & SPOOL 000C 2540 READER * - Definition of a virtual reader & SPOOL 000D 2540 PUNCH A - Definition of a virtual punch & SPOOL 000E 1403 A - Definition of a virtual printer & CONSOLE 009 3215 T - Definition of a console & LINK MAINT 0190 0190 RR - Link to MAINT's 190 minidisk with read access & LINK MAINT 019D 019D RR - Link to MAINT's 19D minidisk with read access& LINK MAINT 019E 019E RR - Link to MAINT's 19E minidisk with read access & LINK VMTOOLS 192 191 RR - Link to VMTOOLS 192 minidisk as 191 with read access & LINK TCPMAINT 592 592 RR - Link to TCPMAINT's 592 minidisk with read access. This is where the ftp utility is located.","& Save and quit XEDIT using \"file\" command.","To add our new profile to z/VM directory use DIRM ADD:"]},{"l":"Create the LINUX1 virtual machine","p":["To create a Linux image we will use a DASD 3390-09 (10016 cyl) as base. DIRMAINT has a feature called PROTODIRs that we can use to create directory template for our Linux.","& First, grab a copy of LINUX PROTODIR","& Receive a file called LINUX PROTODIR and edit it","& In XEDIT tipe \"INPUT\" to enable input mode","& Paste de following content","& Save and close the file","& Apply the LINUX PROTODIR changes using the following command","& Create the virtual machine definition for LINUX1. []","& If you receive RC = 0, you should be able to query your new VM:","& If you receive \"Invalid option - LINUX1\" response, something wrong occured on step[step:createlinux]","& Create LINUX2 VM. This VM will be used on chapter 11()"]}],[{"i":"chap:installinglinux","l":"Installing Linux"},{"l":"Linux PROFILE EXEC","p":["& Logon on VMTOOLS","& Inside VMTOOLS 192 disk make sure that there is a file called PROFILE EXEC.","& If it is empty, use input mode and paste the following content:","The PROFILE EXEC that you just copied is a REXX EXEC that is analogous to a .bash_profile startup script. If the user ID is logged on in a disconnected mode (usually via XAUTOLOG), Linux will be IPLed from minidisk 100. Otherwise, the user is prompted."]},{"l":"Running The Installation","p":["/dev/dasde as swap","& A VNC server process will be started. You should see the following messages:","& After all steps, you should see messages showing the installation system being loaded. For example:","& At the DASD Disk Management window:","& At the Disk Activation window, click Configure DASD Disks.","& Back in Expert Partitioner, click the plus sign to the left of Volume Management. You should see the new home, system and optvg volume group. & Click on each and the Volume Group window will be displayed, as shown on Figure 10.9. It shows there are no logical volumes defined. Start with home VG and Click Add.","& Click Accept.","& Click Add => Volume Group again. & At the Add Volume Group window, set the volume group name to home. & Click Add after selecting/dev/dasdd1 to the Selected Physical Volumes. Click Finish.","& Click Add => Volume Group again. & At the Add Volume Group window, set the volume group name to system. & Click Add after selecting/dev/dasdc1 to the Selected Physical Volumes. Click Finish.","& Click Add => Volume Group. & At the Add Volume Group window, set the volume group name to optvg. & Click Add after selecting /dev/dasdb1 to the Selected Physical Volumes. Click Finish.","& Create an empty partition /dev/dasdb, /dev/dasdc, /dev/dasdd in the same fashion as you did to create /dev/dasda but (Select /dev/dasdb => Add => Maximum Size => Do not format/Do not mount partition). Accept the default size of all the space. Check figure 10.5","& Double-click the IBM-DASD that corresponds to the 100 minidisk in the Available Storage section. In this example, it is /dev/dasda (about 1GB)& In the Hard Disk: /dev/dasda section, click the Add button to add a partition. & In the Add Partition window on /dev/dasda, set partition size to Maximum Size (1.10GB) and click Next. & On the next screen, accept the defaults (Format partition, Ext3 file system, Mount partition, and a Mount Point of /), as shown in Figure 10.4. Click Finish.","& Enter home as the name for new logical volume and click Next. & On the Add Logical Volume window, click the Maximum Size radio button (452Mb) Click Next. & Accept ext3 as the File System type and the Mount point of/home. Click Finish. & Now click on optvg mount point and create a opt using the Maximum Size of optvg, File System type ext3 and Mount point of /opt. & For system vg you will create 3 Logical Volumes: && tmp - /tmp - 500MB ext3 && usr - /usr - 2GB ext3 && var - /var - the rest (about 1.64GB) ext3","& For /dev/dasde format the partition as Swap. Check figure 10.6","& From this point, the installation process behaves identically to any other architecture.","& If you see a pop-up window stating \"The partitioning on disk X is not readable by the partitioning tool parted...\", click OK","& In the Expert tab, move down to Default Runlevel and choose 3: Full multiuser with network. Click OK. You will receive a VNC warning. Click Yes.","& In the Installation Mode window, accept the default of New installation and click Next. & In the Clock and Time Zone window, select your time settings and click Next. & In the Installation Settings window, click the tab Expert. & In the Installation Settings window, click Partitioning. & In the Preparing Hard Disk window, accept the default of Customer Partitioning (for experts) and click Next. & In the Expert Partitioner window and the System View column on the left, click a plus sign next to Hard Disks to expand a list of all available disks, check figure 10.3 below.","& In the Installation Settings window, select Software. You might see a Disk Space Warning window. If so, click OK. & The Software Selection window opens. Leave Base System, 32-Bit Runtime Environment, Help and Support Documentation, and Minimal System selected. Clear all other setting as shown in Figure 10.12, click OK. Click the disk usage window to update the graphs.","& Logon on LINUX1, answer \"no\" when asked to IPL 100.","& Now /dev/dasdb,c,d can be used to create a volume group. Click Volume Management as shown on Figure 10.7.","& Run the setup REXX (The name of the file may differ depending on the distruibution, ask your instructor).","& Start a VNC viewer session to the installation process.","& The Figure 10.11 shows the dasd configuration for our Linux.","& The Linux boot output will show up and at the end you may see:","& The window Finishing Basic Installation will appear, then the VNC client will end and the system will reboot. Go back to the 3270 console and clear the screen a number of times. & Restart or go back to the same VNC client used for the first part of installation. From a browser either click Login Again or click the browser's refresh button until another VNC login window appears. If you are using a VNC client, open that application again. & Log in using the same VNC password (12345678 in this example). & In the Password for root user window, type the root password twice and click Next. Do not forget this password. & In the Hostname and Domain Name window, both Hostname and Domain Name are entered by the installer as they are specified in LINUX PARM file. In this example, linux1-titog is the host name and workshop.ibm.com is the domain name. Clear the Change Hostname via DHCP check-box. Click Next. & In the Network Configuration window you will see Firewall is enabled, click the word disable to disable it. All other values should be correct; therefore, just click Next. & In the Test Internet Connection window, if you do not have Internet access, select No, skip this test, and click Next. & In the Network Services Configuration window, accept the default and click Next. A certificate will be created. & In the User Authentication Method window, select Local (/etc/passwd) and click Next. & In the New Local User window, add at least one user to have a non-root ID on all cloned systems. When you are done, click Next. & In the Writing the system configuration window the SuSEconfig tool writes all your settings to disk. & The next window will be Release Notes. After reviewing the release notes, click Next. & In the Hardware Configuration window, choose the Skip Configuration radio button and click Next. & The last installation window is Installation Completed. Clear the box Clone This System for AutoYaST2 check box and click Finish.","& You are ready to begin the installation. Click Install.","& You should be prompted for Installation Instructions, these steps are covered in class with your instructor.","& You should see a window entitled Welcome. Select your Language and Keyboard. After reading the License Agreement, click the check-box I Agree to the License Terms, then click Next.","& Your Volume Management screen should be like this:","&& Click Activate on the Perform Action pop-up menu. If the DASDs have not been formatted previously, you will be asked if you want to format them now. Format the DASDs now. This will take a few minutes.","&& Click Next when the formatting is complete.","&& Click Select or Deselect for the two read/write disks (100, 101, 102, 103 and 104).","&& If you want to make sure to get the disks in a certain device order, activate them one by one. The first disk will be /dev/dasda, the second disk will be /dev/dasdb, and so on.","&& In the Disk Activation window, click Next.","&& The DASDs will be activated quickly.","Activate DASDs","Add Partition on /dev/dasda","Add Partition on /dev/dasdb,c,d","Add Volume Group","Check figure 10.10 to see the result:","DASD distribution","Hard Disks","Logical Volume","Logical Volumes configured","Select disks to be used during the installation","Softwares to be installed","The VNC session should end. Return to the 3270 session and you may have to clear the screen a few times. Then, you should see a login prompt. You are done installing Linux! You can disconnect from the 3270 session using the DISCONNECT command:","Volume Groups","You can now access this Linux system using SSH."]},{"l":"Initial configuration"},{"l":"Disable Unneeded Services","p":["In order to keep the golden image as lean as possible in terms of CPU usage, some of these services can be turned off. Turn off the following services by using the following chkconfig commands:"]},{"l":"Install CMSfs","p":["To read CMS files from Linux, the cmsfs RPM is used. The clone script requires it to read parameter files. To add this package to the golden image, use:"]},{"i":"configure-etcinittab","l":"Configure /etc/inittab","p":["Linux reboots when a Ctrl-Alt-Del key sequence is trapped. This key sequence is simulated by z/VM when it issues a SIGNAL SHUTDOWN command. Rather than rebooting, it might be better that your system halts (shuts down).","Change shutdown -r to shutdown -h:","This change will be picked up when the system is rebooted."]},{"i":"sec:configurebootlocal","l":"Configure boot.local","p":["The chshut command is added twice so that the virtual machine is logged off after it is halted or powered off. This will allow for an orderly shutdown of z/VM. To do so, add the following four lines to boot.local:","You can execute /etc/init.d/boot.local to test the new settings:","Your Linux first image is now ready!"]}],[{"i":"cap:clonelinux","l":"Clone Linux","p":["During this chapter we will create our second Linux (LINUX2) using LINUX1 (from the previus chapter) as our golden image."]},{"l":"Before you begin","p":["You need to:","& Be sure that LINUX1 is not running so the new clone can use LINUX1's IP address. You will use LINUX1's IP address temporarily for each Linux clone during the cloning process. Since no two Linux virtual servers can have the same IP address at the same time, you must clone Linux servers one at a time, then customize them. & Have the new IP address for the cloned Linux virtual server. & Log on as MAINT."]},{"l":"Procedure","p":["& As soon as you change the IP address you will lose your SSH connection. Reconnect using your new IP or reboot the server from 3270 console.","& As soon as your clone is complete, log onto LINUX02. The Linux operating system loads.","& Back to \"Overview\" tab, select the network card using \"TAB\" key and press Alt+i to edit it.","& Check that the Linux operating system reboots properly and that the network connections are correct.","& Clone the disks from LINUX1 to the clone LINUX02. From the command line, type these DirMaint commands and press the Enter key after each one:","& Cloning might take time. You are ready to move to the next step after your work units have completed successfully. To determine the status of your work units, type this command and press the Enter key:","& Congratulations, your clone is complete!","& From the command line execute:","& Go to IP Address Field and update it using the new IP","& If something is running you may see a workunit:","& If you received the error above, it is ok. We just need to ensure that the directory is unlocked.","& Otherwise the DATAMOVE queue should be empty:","& Press alt+s to go to \"Hostname/DNS\" tab, update the hostname of the new server and press alt+v to go back to \"Overview\" tab.","& Select Network Devices and Enter on Network Settings","& SSH to the new Linux virtual server and update the network configuration files to make permanent the network changes. You might need to modify the IP address and host name through a tool like yast2.","& Try pinging this Linux server or try to access a remote site from this Linux server.","& Unlock LINUX1's directory entry. From the command line, type this command and press the Enter key:","& You will receive a response like this one for each command:","Assuming that LINUX2 is created in exercise 9.7.1, we will clone all the disks from LINUX1 to LINUX2. We will use DIRMAINT for this activity.","Change your hostname","Complete Environment","dirm for linux2 clonedisk 100 linux1 100","Example:","Hints Notice that the target is \"linux2\" and it is defined before\"linux1\" in the command above.","Select Network Devices and Enter on Network Settings","Select the network card","The command above means: \"For [linux2], in my mdisk[100] clone [linux1] mdisk[100]\"","This is our actual environment after the changes:","Update the IP Address"]}],[{"l":"Basic system automation","p":["It is useful to configure z/VM so that all production Linux systems, or all Linux systems desired to be started, come up when z/VM is IPLed. Contrarily, when z/VM is shut down, it is useful for all Linux systems running to first come down cleanly. z/VM has a facility that allows a privileged user to set a time parameter that defines the amount of time reserved for guests to come down after the z/VM SHUTDOWN command is issued, but before z/VM itself comes down. This value is used as the default timeout interval for SIGNAL, FORCE, and SHUTDOWN commands when no explicit interval is specified. If SET SIGNAL SHUTDOWN is not specified in the system configuration file, the default is 0, which suppresses guest shutdown signals. We have setup the SIGNAL SHUTDOWN to 500 seconds on page ."]},{"i":"autolog-linux-systems-to-boot-at-zvm-ipl","l":"Autolog Linux systems to boot at z/VM IPL","p":["Like we did for TCPIP on section 6.5.6(page ), we will edit the PROFILE EXEC for AUTOLOG1 to include our Linux guests.","Instead of login on AUTOLOG1, we will modify this file from MAINT, linking AUTOLOG1 191 disk.","& Logon as MAINT","& Link to the AUTOLOG1 191 minidisk. Type this command and press the Enter key:","& Access the 091 minidisk as Z. Type this command and press the Enter key:","& Edit AUTOLOG1's PROFILE EXEC.","& Find Customer processing comment:","& Our previous update left this section like this:","& Add your Linux guests LINUX1 and LINUX2:","& Save and quit using file","& Detach the 091 minidisk (AUTOLOG1's 191). Type this command and press the Enter key:","& If you want to test the autolog procedure, shutdown your Linux guests and from the command line type this command and press the Enter key:"]}],[{"l":"System z Device Drivers and Commands","p":["Linux on z System has some special tools used to manage some devices and resources. This package is called s390x tools. You can get more info from http://www.ibm.com/developerworks/linux/linux390/s390-tools.html.","We are going to use some of s390x tools to increase/decrease resources dynamically."]},{"i":"zvm-cp-interface-device-driver-vmcp","l":"z/VM CP interface device driver (vmcp)","p":["Using the z/VM CP interface device driver (vmcp), you can send control program (CP) commands to the VM hypervisor and display VM's response. The vmcp module is loaded during the initialization because we have setup it on boot.local (Section 10.3.4).","Display its status to make sure that the module is loaded correctly.","The vmcp module is now loaded. Test it by using some z/VM CP commands:"]},{"l":"Managing Virtual CPU","p":["In our LINDFLT PROFILE we specified the maximum number of processors allowed for the guest when we applied the following line:","& Check how many CPUs you have for your guest using the command lscpu:","& To change the number of CPUs dinamically you can use the command vmcp def cpu <n> and chcpu:","& The first step is to define you CPU via vmcp:","& The \"cpu 0\" is the base and it is already defined by LINDFLT. Use chcpu -r to rescan your CPUs:","& lscpu should show you 2 CPUs now","& To make your changes permanent you need to add it to LINUX2 directory using DIRM CPU:","& If you want to delete a CPU you can use the DELETE suffix:","& To remove from Linux execute"]},{"l":"Virtual Memory","p":["The amount of memory that z/VM allocates to a VM is defined in the directory statement.","Our LINUX PROTODIR defines our Linux with 1GB of memory","Anyway you are able to query it using the following DIRMAINT command:","To change it to a new value you can use the same command changing the suffix to a new value:","To apply the new changes you need to shutdown your VM guest and reIPL it again using XAUTOLOG:","After the reipl, you can check the new memory amount:"]},{"l":"Defining standby memory","p":["If you want to configure an amount of standby memory for dynamically increase you can add a \"COMMAND\" statement to the directory:","Fill the panel like this:","Adding a COMMAND","The panel above sets 512 MB as default memory value and 512 MB set as a standby.","As you can see there is one memory block that is \"offline\", to enable it use chmem command:","You can disable an amount of memory using \"-d\" option:"]},{"l":"Working with Disks","p":["& Check the size of your new vg:","& Create a new VG:","& Create a partition using fdasd:","& Create the new directory and mount the new LV:","& Create the new LV:","& Enable the new device:","& Format it using ext3:","& From the output above we can see that the new device is dasdf. To format new device use the following commands:","& Lets add a new disk to Linux","& lsdasd command still does not show you the new device","& lsdasd will now show the new device unformatted:","& The first step is to create a PV using our new device:","& The new dasd is now available for LVM. Lets assume that we want to create a new VG called appvg with one logical volume called myapp.","& To activate this new disk at boot time use dasd_configure:","& To make it active during the boot add this line at the end of/etc/fstab","& To update our lsdasd view we will use vmcp command:","Adding a disk to linux","Another useful command is lsdasd:","It shows you the VDEV number and how Linux named it, example, minidisk 100 (this is how z/VM sees it) is /dev/dasda for Linux.","This is useful for disk maintenance and LVM."]},{"i":"exercise-2","l":"Exercise","p":["Try to add a new DASD to your Linux and extend /usr to 2.5G.","Tip: 800 cyl is about 500 MB","Steps:","On z/VM as MAINT: & DIRM FOR LINUX2 AMD","On Linux as root: & vmcp link '* 106 106 mr'","& chccwdev -e 106","& dasdfmt -p -b 4096 -y -f /dev/dasdg","& fdasd -a /dev/dasdg","& dasd_configure 0.0.0106 1","& pvcreate /dev/dasdg1","& vgextend system /dev/dasdg1","& lvextend -L+500M /dev/system/usr","& resize2fs /dev/system/usr","& df -h"]}],[{"l":"Performance Monitoring Tools"},{"i":"the-zvm-performance-toolkit","l":"The z/VM Performance Toolkit","p":["The Performance Toolkit for z/VM is a global performance product that provides real-time monitoring functions and historical performance analysis for multiple z/VM systems (local or remote). In this section you will learn how to enable the Performance Toolkit. You will go over later in the class how to use the Performance Toolkit for understanding basic system performance.","& Open your web browser to the z/VM IP address and port number for Performance Toolkit for VM.","Performance Toolkit","& On the Web Server Login screen, type your user ID and password (maint userid).","Performance Toolkit login","& Click the name of your z/VM host system. You see a screen like the following:","Performance Toolkit z/VM host","Each item show a different perspective of your environment. Try it."]},{"l":"Monitoring Linux"},{"i":"zvm-monitor-stream---appldata-support","l":"z/VM Monitor stream - APPLDATA Support","p":["This exercise describes how to load those components of the support that have been compiled as separate modules and how to set up your VM guest for the APPLDATA record support.","& Login to LINUX1 as root","& Load the data gathering modules:","& APPLDATA monitor records are produced if both a particular data gathering module and the monitoring support in general are switched on. To switch on monitoring, use the echo command to send a non-zero value into the monitoring variables in the /proc/ virtual file system:","& You can set the time that lapse between consecutive data samples. The time you set is measured by the virtual CPU timer. Because the virtual timer slows down as the guest idles, the time sampling interval in real time can be considerably longer than the value you set. The value in/proc/sys/appldata/interval is the sample interval in milliseconds. The default sample interval is 10000 ms.","To read the current value, issue:","& If you want to make this enabled permanently add the commands below to your /etc/init.d/boot.local:","& Now under \"User Data\" section you should be able to see section \"29. Linux systems*\" enabled."]}],[{"l":"Terminal Server using IUCV","p":["Congratulations you have unlocked an extra content! :)","On this chapter we will discuss the use of an IUCV Terminal Server to connect to Linux on z System guests. It will increase the availability by providing emergency access if the network for a system fails.","The terminal server and all target systems run as guests of the same z/VM instance. Terminal server and target systems are connected through the z/VM Inter-User Communication Vehicle (IUCV). From the terminal server, administrators can access terminal devices on target systems without requiring direct TCP/IP connections to the target systems.","You can use a terminal server to achieve these goals:","& Increase availability by providing emergency access to target systems if the primary network for these systems fails.","& Heighten security by separating user networks from administrator networks or by isolating sensitive Linux instances from IP networks.","& Simplify systems administration by providing a central access point to target systems.","Terminal server environment"]},{"l":"Configuring the Server","p":["The first step is to add two new statements to the server Directory. Our server is LINUX1, that way, we will execute the following DIRMAINT commands:","& To allow our Terminal Server to connect on any guest:","& We will limit the number of concurrent IUCV connections to 128. If omitted, the limit defaults to 64, the maximum value for MAXCONN is 65535","& The configuration for the server is complete. Logoff and restart LINUX1:","& Wait for it LOGOFF and then:"]},{"l":"Configuring The Client","p":["& To configure the client we just need one statement:","Tip If you want to set IUCV ALLOW to all your Linux guests set it in LINDFLT:","DIRM FOR LINDFLT IUCV ALLOW","& The configuration for the client is complete. Logoff and restart LINUX2:","& Wait for it LOGOFF and then:","& Login as root in LINUX1","& Execute:","& Press ENTER twice and the login prompt will appear for LINUX2, logon as root and you will connect to LINUX2 via iucv."]},{"l":"Configuring ts-shell for an user","p":["The ts-shell will lock an user to a limited shell that will only be able to connect or list the IUCV clients that it has access."]},{"l":"Creating an user that will be locked in ts-shell","p":["& First lets create a group that will also be allowed to connect to some servers","& Create an user called \"bob\" that will be locked in ts-shell:","& Change its password","& Authorize \"bob\" and its group to connect to LINUX2:","& Enable audit on ts-shell"]},{"l":"Testing ts-shell","p":["& Login as \"bob\" in LINUX1, you will see a prompt like this:","& To connect to LINUX2 type:","& Press ENTER twice"]},{"l":"Checking audit logs","p":["& As root on LINUX1, go to /var/log/ts-shell/bob (There will be a folder for each user)","& List the files there","& Choose one of these files and use \"scriptreplay\" to replay the session:"]}],[{"l":"How to link a disk from another Linux","p":["& To link a disk as Read-write from another server you need to make sure that this server is down. You can check via 3270 or Linux:","& To link the disk we need to know the password of it, if you don't know the password you can check its directory","& Check the \"MULTIPLE\" password and unlock the directory again. If the password is not set, set it.","& You can link the disk using vmcp:","& To check execute:","& As soon as you link the disk, enable it","& Check the dasd name using lsdasd:","& List /mnt","& As you can see all files from \"root\" filesystem of LINUX2 are available, edit whatever you need and to free the disk again follow the steps below:","&& umount the filesystem","&& Deactivate the disk:","&& Detach the disk","& Activate LINUX2 again"]}],[{"l":"References","p":["For more information check above","The Virtualization Cookbook for IBM z/VM 6.3, RHEL 6.4, and SLES 11 SP3 - Link: < http://www.redbooks.ibm.com/abstracts/sg248147.html>[]","Directory Maintenance Facility Commands Reference - Link:< http://publibz.boulder.ibm.com/epubs/pdf/hcsl4c21.pdf>","CP Commands and Utilities Reference - Link:< http://publibz.boulder.ibm.com/epubs/pdf/hcse4c11.pdf>","Getting Started with Linux on System z - Link:< http://publibz.boulder.ibm.com/epubs/pdf/hcsx0c21.pdf>"]}]]